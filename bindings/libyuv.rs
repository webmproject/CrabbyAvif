/* automatically generated by rust-bindgen 0.69.4 */

pub const _STDINT_H: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const __GLIBC_USE_ISOC2X: u32 = 0;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_POSIX_IMPLICITLY: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __SYSCALL_WORDSIZE: u32 = 64;
pub const __TIMESIZE: u32 = 64;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_60559_BFP__: u32 = 201404;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_IEC_60559_COMPLEX__: u32 = 201404;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 37;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI: u32 = 0;
pub const __HAVE_GENERIC_SELECTION: u32 = 1;
pub const __GLIBC_USE_LIB_EXT2: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;
pub const _BITS_TYPES_H: u32 = 1;
pub const _BITS_TYPESIZES_H: u32 = 1;
pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;
pub const __INO_T_MATCHES_INO64_T: u32 = 1;
pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;
pub const __STATFS_MATCHES_STATFS64: u32 = 1;
pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64: u32 = 1;
pub const __FD_SETSIZE: u32 = 1024;
pub const _BITS_TIME64_H: u32 = 1;
pub const _BITS_WCHAR_H: u32 = 1;
pub const _BITS_STDINT_INTN_H: u32 = 1;
pub const _BITS_STDINT_UINTN_H: u32 = 1;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i64 = -9223372036854775808;
pub const INT_FAST32_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u64 = 9223372036854775807;
pub const INT_FAST32_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: i32 = -1;
pub const UINT_FAST32_MAX: i32 = -1;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const UINTPTR_MAX: i32 = -1;
pub const PTRDIFF_MIN: i64 = -9223372036854775808;
pub const PTRDIFF_MAX: u64 = 9223372036854775807;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const SIZE_MAX: i32 = -1;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 4294967295;
pub const LIBYUV_FALSE: u32 = 0;
pub const LIBYUV_TRUE: u32 = 1;
pub const _STDLIB_H: u32 = 1;
pub const WNOHANG: u32 = 1;
pub const WUNTRACED: u32 = 2;
pub const WSTOPPED: u32 = 2;
pub const WEXITED: u32 = 4;
pub const WCONTINUED: u32 = 8;
pub const WNOWAIT: u32 = 16777216;
pub const __WNOTHREAD: u32 = 536870912;
pub const __WALL: u32 = 1073741824;
pub const __WCLONE: u32 = 2147483648;
pub const __W_CONTINUED: u32 = 65535;
pub const __WCOREFLAG: u32 = 128;
pub const __HAVE_FLOAT128: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT128: u32 = 0;
pub const __HAVE_FLOAT64X: u32 = 1;
pub const __HAVE_FLOAT64X_LONG_DOUBLE: u32 = 1;
pub const __HAVE_FLOAT16: u32 = 0;
pub const __HAVE_FLOAT32: u32 = 1;
pub const __HAVE_FLOAT64: u32 = 1;
pub const __HAVE_FLOAT32X: u32 = 1;
pub const __HAVE_FLOAT128X: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT16: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT32: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT64: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT32X: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT64X: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT128X: u32 = 0;
pub const __HAVE_FLOATN_NOT_TYPEDEF: u32 = 0;
pub const __ldiv_t_defined: u32 = 1;
pub const __lldiv_t_defined: u32 = 1;
pub const RAND_MAX: u32 = 2147483647;
pub const EXIT_FAILURE: u32 = 1;
pub const EXIT_SUCCESS: u32 = 0;
pub const _SYS_TYPES_H: u32 = 1;
pub const __clock_t_defined: u32 = 1;
pub const __clockid_t_defined: u32 = 1;
pub const __time_t_defined: u32 = 1;
pub const __timer_t_defined: u32 = 1;
pub const __BIT_TYPES_DEFINED__: u32 = 1;
pub const _ENDIAN_H: u32 = 1;
pub const _BITS_ENDIAN_H: u32 = 1;
pub const __LITTLE_ENDIAN: u32 = 1234;
pub const __BIG_ENDIAN: u32 = 4321;
pub const __PDP_ENDIAN: u32 = 3412;
pub const _BITS_ENDIANNESS_H: u32 = 1;
pub const __BYTE_ORDER: u32 = 1234;
pub const __FLOAT_WORD_ORDER: u32 = 1234;
pub const LITTLE_ENDIAN: u32 = 1234;
pub const BIG_ENDIAN: u32 = 4321;
pub const PDP_ENDIAN: u32 = 3412;
pub const BYTE_ORDER: u32 = 1234;
pub const _BITS_BYTESWAP_H: u32 = 1;
pub const _BITS_UINTN_IDENTITY_H: u32 = 1;
pub const _SYS_SELECT_H: u32 = 1;
pub const __sigset_t_defined: u32 = 1;
pub const __timeval_defined: u32 = 1;
pub const _STRUCT_TIMESPEC: u32 = 1;
pub const FD_SETSIZE: u32 = 1024;
pub const _BITS_PTHREADTYPES_COMMON_H: u32 = 1;
pub const _THREAD_SHARED_TYPES_H: u32 = 1;
pub const _BITS_PTHREADTYPES_ARCH_H: u32 = 1;
pub const __SIZEOF_PTHREAD_MUTEX_T: u32 = 40;
pub const __SIZEOF_PTHREAD_ATTR_T: u32 = 56;
pub const __SIZEOF_PTHREAD_RWLOCK_T: u32 = 56;
pub const __SIZEOF_PTHREAD_BARRIER_T: u32 = 32;
pub const __SIZEOF_PTHREAD_MUTEXATTR_T: u32 = 4;
pub const __SIZEOF_PTHREAD_COND_T: u32 = 48;
pub const __SIZEOF_PTHREAD_CONDATTR_T: u32 = 4;
pub const __SIZEOF_PTHREAD_RWLOCKATTR_T: u32 = 8;
pub const __SIZEOF_PTHREAD_BARRIERATTR_T: u32 = 4;
pub const _THREAD_MUTEX_INTERNAL_H: u32 = 1;
pub const __PTHREAD_MUTEX_HAVE_PREV: u32 = 1;
pub const __have_pthread_attr_t: u32 = 1;
pub const _ALLOCA_H: u32 = 1;
pub const CLANG_HAS_AVX2: u32 = 1;
pub const CLANG_HAS_AVX512: u32 = 1;
pub const KUVTOB: u32 = 0;
pub const KUVTOG: u32 = 32;
pub const KUVTOR: u32 = 64;
pub const KYTORGB: u32 = 96;
pub const KYBIASTORGB: u32 = 128;
pub const IACA_ASM_START: &[u8; 59] =
    b".byte 0x0F, 0x0B\n movl $111, %%ebx\n.byte 0x64, 0x67, 0x90\n\0";
pub const IACA_ASM_END: &[u8; 59] =
    b" movl $222, %%ebx\n.byte 0x64, 0x67, 0x90\n.byte 0x0F, 0x0B\n\0";
pub const LIBYUV_VERSION: u32 = 1887;
pub type wchar_t = ::std::os::raw::c_int;
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct max_align_t {
    pub __clang_max_align_nonce1: ::std::os::raw::c_longlong,
    pub __bindgen_padding_0: u64,
    pub __clang_max_align_nonce2: u128,
}
#[test]
fn bindgen_test_layout_max_align_t() {
    const UNINIT: ::std::mem::MaybeUninit<max_align_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<max_align_t>(),
        32usize,
        concat!("Size of: ", stringify!(max_align_t))
    );
    assert_eq!(
        ::std::mem::align_of::<max_align_t>(),
        16usize,
        concat!("Alignment of ", stringify!(max_align_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__clang_max_align_nonce1) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(max_align_t),
            "::",
            stringify!(__clang_max_align_nonce1)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__clang_max_align_nonce2) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(max_align_t),
            "::",
            stringify!(__clang_max_align_nonce2)
        )
    );
}
pub type __u_char = ::std::os::raw::c_uchar;
pub type __u_short = ::std::os::raw::c_ushort;
pub type __u_int = ::std::os::raw::c_uint;
pub type __u_long = ::std::os::raw::c_ulong;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_long;
pub type __uint64_t = ::std::os::raw::c_ulong;
pub type __int_least8_t = __int8_t;
pub type __uint_least8_t = __uint8_t;
pub type __int_least16_t = __int16_t;
pub type __uint_least16_t = __uint16_t;
pub type __int_least32_t = __int32_t;
pub type __uint_least32_t = __uint32_t;
pub type __int_least64_t = __int64_t;
pub type __uint_least64_t = __uint64_t;
pub type __quad_t = ::std::os::raw::c_long;
pub type __u_quad_t = ::std::os::raw::c_ulong;
pub type __intmax_t = ::std::os::raw::c_long;
pub type __uintmax_t = ::std::os::raw::c_ulong;
pub type __dev_t = ::std::os::raw::c_ulong;
pub type __uid_t = ::std::os::raw::c_uint;
pub type __gid_t = ::std::os::raw::c_uint;
pub type __ino_t = ::std::os::raw::c_ulong;
pub type __ino64_t = ::std::os::raw::c_ulong;
pub type __mode_t = ::std::os::raw::c_uint;
pub type __nlink_t = ::std::os::raw::c_ulong;
pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type __pid_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __fsid_t {
    pub __val: [::std::os::raw::c_int; 2usize],
}
#[test]
fn bindgen_test_layout___fsid_t() {
    const UNINIT: ::std::mem::MaybeUninit<__fsid_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<__fsid_t>(),
        8usize,
        concat!("Size of: ", stringify!(__fsid_t))
    );
    assert_eq!(
        ::std::mem::align_of::<__fsid_t>(),
        4usize,
        concat!("Alignment of ", stringify!(__fsid_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__val) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__fsid_t),
            "::",
            stringify!(__val)
        )
    );
}
pub type __clock_t = ::std::os::raw::c_long;
pub type __rlim_t = ::std::os::raw::c_ulong;
pub type __rlim64_t = ::std::os::raw::c_ulong;
pub type __id_t = ::std::os::raw::c_uint;
pub type __time_t = ::std::os::raw::c_long;
pub type __useconds_t = ::std::os::raw::c_uint;
pub type __suseconds_t = ::std::os::raw::c_long;
pub type __suseconds64_t = ::std::os::raw::c_long;
pub type __daddr_t = ::std::os::raw::c_int;
pub type __key_t = ::std::os::raw::c_int;
pub type __clockid_t = ::std::os::raw::c_int;
pub type __timer_t = *mut ::std::os::raw::c_void;
pub type __blksize_t = ::std::os::raw::c_long;
pub type __blkcnt_t = ::std::os::raw::c_long;
pub type __blkcnt64_t = ::std::os::raw::c_long;
pub type __fsblkcnt_t = ::std::os::raw::c_ulong;
pub type __fsblkcnt64_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt64_t = ::std::os::raw::c_ulong;
pub type __fsword_t = ::std::os::raw::c_long;
pub type __ssize_t = ::std::os::raw::c_long;
pub type __syscall_slong_t = ::std::os::raw::c_long;
pub type __syscall_ulong_t = ::std::os::raw::c_ulong;
pub type __loff_t = __off64_t;
pub type __caddr_t = *mut ::std::os::raw::c_char;
pub type __intptr_t = ::std::os::raw::c_long;
pub type __socklen_t = ::std::os::raw::c_uint;
pub type __sig_atomic_t = ::std::os::raw::c_int;
pub type int_least8_t = __int_least8_t;
pub type int_least16_t = __int_least16_t;
pub type int_least32_t = __int_least32_t;
pub type int_least64_t = __int_least64_t;
pub type uint_least8_t = __uint_least8_t;
pub type uint_least16_t = __uint_least16_t;
pub type uint_least32_t = __uint_least32_t;
pub type uint_least64_t = __uint_least64_t;
pub type int_fast8_t = ::std::os::raw::c_schar;
pub type int_fast16_t = ::std::os::raw::c_long;
pub type int_fast32_t = ::std::os::raw::c_long;
pub type int_fast64_t = ::std::os::raw::c_long;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_ulong;
pub type uint_fast32_t = ::std::os::raw::c_ulong;
pub type uint_fast64_t = ::std::os::raw::c_ulong;
pub type intmax_t = __intmax_t;
pub type uintmax_t = __uintmax_t;
extern "C" {
    pub fn HashDjb2(src: *const u8, count: u64, seed: u32) -> u32;
}
extern "C" {
    pub fn ComputeHammingDistance(
        src_a: *const u8,
        src_b: *const u8,
        count: ::std::os::raw::c_int,
    ) -> u64;
}
extern "C" {
    pub fn ARGBDetect(
        argb: *const u8,
        stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> u32;
}
extern "C" {
    pub fn ComputeSumSquareError(
        src_a: *const u8,
        src_b: *const u8,
        count: ::std::os::raw::c_int,
    ) -> u64;
}
extern "C" {
    pub fn ComputeSumSquareErrorPlane(
        src_a: *const u8,
        stride_a: ::std::os::raw::c_int,
        src_b: *const u8,
        stride_b: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> u64;
}
pub const kMaxPsnr: ::std::os::raw::c_int = 128;
extern "C" {
    pub fn SumSquareErrorToPsnr(sse: u64, count: u64) -> f64;
}
extern "C" {
    pub fn CalcFramePsnr(
        src_a: *const u8,
        stride_a: ::std::os::raw::c_int,
        src_b: *const u8,
        stride_b: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn I420Psnr(
        src_y_a: *const u8,
        stride_y_a: ::std::os::raw::c_int,
        src_u_a: *const u8,
        stride_u_a: ::std::os::raw::c_int,
        src_v_a: *const u8,
        stride_v_a: ::std::os::raw::c_int,
        src_y_b: *const u8,
        stride_y_b: ::std::os::raw::c_int,
        src_u_b: *const u8,
        stride_u_b: ::std::os::raw::c_int,
        src_v_b: *const u8,
        stride_v_b: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn CalcFrameSsim(
        src_a: *const u8,
        stride_a: ::std::os::raw::c_int,
        src_b: *const u8,
        stride_b: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn I420Ssim(
        src_y_a: *const u8,
        stride_y_a: ::std::os::raw::c_int,
        src_u_a: *const u8,
        stride_u_a: ::std::os::raw::c_int,
        src_v_a: *const u8,
        stride_v_a: ::std::os::raw::c_int,
        src_y_b: *const u8,
        stride_y_b: ::std::os::raw::c_int,
        src_u_b: *const u8,
        stride_u_b: ::std::os::raw::c_int,
        src_v_b: *const u8,
        stride_v_b: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> f64;
}
pub const RotationMode_kRotate0: RotationMode = 0;
pub const RotationMode_kRotate90: RotationMode = 90;
pub const RotationMode_kRotate180: RotationMode = 180;
pub const RotationMode_kRotate270: RotationMode = 270;
pub const RotationMode_kRotateNone: RotationMode = 0;
pub const RotationMode_kRotateClockwise: RotationMode = 90;
pub const RotationMode_kRotateCounterClockwise: RotationMode = 270;
pub type RotationMode = ::std::os::raw::c_uint;
pub use self::RotationMode as RotationModeEnum;
extern "C" {
    pub fn I420Rotate(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        mode: RotationMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422Rotate(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        mode: RotationMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444Rotate(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        mode: RotationMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010Rotate(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        mode: RotationMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210Rotate(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        mode: RotationMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I410Rotate(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        mode: RotationMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12ToI420Rotate(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        mode: RotationMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Android420ToI420Rotate(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_pixel_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        rotation: RotationMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RotatePlane(
        src: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst: *mut u8,
        dst_stride: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        mode: RotationMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RotatePlane90(
        src: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst: *mut u8,
        dst_stride: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RotatePlane180(
        src: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst: *mut u8,
        dst_stride: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RotatePlane270(
        src: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst: *mut u8,
        dst_stride: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RotatePlane_16(
        src: *const u16,
        src_stride: ::std::os::raw::c_int,
        dst: *mut u16,
        dst_stride: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        mode: RotationMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn SplitRotateUV(
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        mode: RotationMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn SplitRotateUV90(
        src: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_a: *mut u8,
        dst_stride_a: ::std::os::raw::c_int,
        dst_b: *mut u8,
        dst_stride_b: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitRotateUV180(
        src: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_a: *mut u8,
        dst_stride_a: ::std::os::raw::c_int,
        dst_b: *mut u8,
        dst_stride_b: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitRotateUV270(
        src: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_a: *mut u8,
        dst_stride_a: ::std::os::raw::c_int,
        dst_b: *mut u8,
        dst_stride_b: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn TransposePlane(
        src: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst: *mut u8,
        dst_stride: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitTransposeUV(
        src: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_a: *mut u8,
        dst_stride_a: ::std::os::raw::c_int,
        dst_b: *mut u8,
        dst_stride_b: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
pub const FilterMode_kFilterNone: FilterMode = 0;
pub const FilterMode_kFilterLinear: FilterMode = 1;
pub const FilterMode_kFilterBilinear: FilterMode = 2;
pub const FilterMode_kFilterBox: FilterMode = 3;
pub type FilterMode = ::std::os::raw::c_uint;
pub use self::FilterMode as FilterModeEnum;
extern "C" {
    pub fn ScalePlane(
        src: *const u8,
        src_stride: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst: *mut u8,
        dst_stride: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ScalePlane_16(
        src: *const u16,
        src_stride: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst: *mut u16,
        dst_stride: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ScalePlane_12(
        src: *const u16,
        src_stride: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst: *mut u16,
        dst_stride: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420Scale(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420Scale_16(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420Scale_12(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444Scale(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444Scale_16(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444Scale_12(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422Scale(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422Scale_16(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422Scale_12(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12Scale(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct YuvConstants {
    pub kUVToB: [u8; 32usize],
    pub kUVToG: [u8; 32usize],
    pub kUVToR: [u8; 32usize],
    pub kYToRgb: [i16; 16usize],
    pub kYBiasToRgb: [i16; 16usize],
}
#[test]
fn bindgen_test_layout_YuvConstants() {
    const UNINIT: ::std::mem::MaybeUninit<YuvConstants> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<YuvConstants>(),
        160usize,
        concat!("Size of: ", stringify!(YuvConstants))
    );
    assert_eq!(
        ::std::mem::align_of::<YuvConstants>(),
        2usize,
        concat!("Alignment of ", stringify!(YuvConstants))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).kUVToB) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(YuvConstants),
            "::",
            stringify!(kUVToB)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).kUVToG) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(YuvConstants),
            "::",
            stringify!(kUVToG)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).kUVToR) as usize - ptr as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(YuvConstants),
            "::",
            stringify!(kUVToR)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).kYToRgb) as usize - ptr as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(YuvConstants),
            "::",
            stringify!(kYToRgb)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).kYBiasToRgb) as usize - ptr as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(YuvConstants),
            "::",
            stringify!(kYBiasToRgb)
        )
    );
}
extern "C" {
    pub static kYuvI601Constants: YuvConstants;
}
extern "C" {
    pub static kYuvJPEGConstants: YuvConstants;
}
extern "C" {
    pub static kYuvH709Constants: YuvConstants;
}
extern "C" {
    pub static kYuvF709Constants: YuvConstants;
}
extern "C" {
    pub static kYuv2020Constants: YuvConstants;
}
extern "C" {
    pub static kYuvV2020Constants: YuvConstants;
}
extern "C" {
    pub static kYvuI601Constants: YuvConstants;
}
extern "C" {
    pub static kYvuJPEGConstants: YuvConstants;
}
extern "C" {
    pub static kYvuH709Constants: YuvConstants;
}
extern "C" {
    pub static kYvuF709Constants: YuvConstants;
}
extern "C" {
    pub static kYvu2020Constants: YuvConstants;
}
extern "C" {
    pub static kYvuV2020Constants: YuvConstants;
}
extern "C" {
    pub fn ARGBCopy(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn J420ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn J420ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H420ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H420ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U420ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U420ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn J422ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn J422ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H422ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H422ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U422ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U422ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn J444ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn J444ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H444ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H444ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U444ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U444ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444ToRGB24(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444ToRAW(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_raw: *mut u8,
        dst_stride_raw: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010ToARGB(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010ToABGR(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H010ToARGB(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H010ToABGR(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U010ToARGB(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U010ToABGR(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210ToARGB(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210ToABGR(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H210ToARGB(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H210ToABGR(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U210ToARGB(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U210ToABGR(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420AlphaToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u8,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420AlphaToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u8,
        src_stride_a: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422AlphaToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u8,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422AlphaToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u8,
        src_stride_a: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444AlphaToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u8,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444AlphaToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u8,
        src_stride_a: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I400ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn J400ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV21ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_vu: *const u8,
        src_stride_vu: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV21ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_vu: *const u8,
        src_stride_vu: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12ToRGB24(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV21ToRGB24(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_vu: *const u8,
        src_stride_vu: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV21ToYUV24(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_vu: *const u8,
        src_stride_vu: ::std::os::raw::c_int,
        dst_yuv24: *mut u8,
        dst_stride_yuv24: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12ToRAW(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_raw: *mut u8,
        dst_stride_raw: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV21ToRAW(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_vu: *const u8,
        src_stride_vu: ::std::os::raw::c_int,
        dst_raw: *mut u8,
        dst_stride_raw: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn YUY2ToARGB(
        src_yuy2: *const u8,
        src_stride_yuy2: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn UYVYToARGB(
        src_uyvy: *const u8,
        src_stride_uyvy: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010ToAR30(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H010ToAR30(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010ToAB30(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ab30: *mut u8,
        dst_stride_ab30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H010ToAB30(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ab30: *mut u8,
        dst_stride_ab30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U010ToAR30(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U010ToAB30(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ab30: *mut u8,
        dst_stride_ab30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210ToAR30(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210ToAB30(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ab30: *mut u8,
        dst_stride_ab30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H210ToAR30(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H210ToAB30(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ab30: *mut u8,
        dst_stride_ab30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U210ToAR30(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn U210ToAB30(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ab30: *mut u8,
        dst_stride_ab30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn BGRAToARGB(
        src_bgra: *const u8,
        src_stride_bgra: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ABGRToARGB(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RGBAToARGB(
        src_rgba: *const u8,
        src_stride_rgba: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RGB24ToARGB(
        src_rgb24: *const u8,
        src_stride_rgb24: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RAWToARGB(
        src_raw: *const u8,
        src_stride_raw: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RAWToRGBA(
        src_raw: *const u8,
        src_stride_raw: ::std::os::raw::c_int,
        dst_rgba: *mut u8,
        dst_stride_rgba: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RGB565ToARGB(
        src_rgb565: *const u8,
        src_stride_rgb565: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGB1555ToARGB(
        src_argb1555: *const u8,
        src_stride_argb1555: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGB4444ToARGB(
        src_argb4444: *const u8,
        src_stride_argb4444: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AR30ToARGB(
        src_ar30: *const u8,
        src_stride_ar30: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AR30ToABGR(
        src_ar30: *const u8,
        src_stride_ar30: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AR30ToAB30(
        src_ar30: *const u8,
        src_stride_ar30: ::std::os::raw::c_int,
        dst_ab30: *mut u8,
        dst_stride_ab30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AR64ToARGB(
        src_ar64: *const u16,
        src_stride_ar64: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AB64ToARGB(
        src_ab64: *const u16,
        src_stride_ab64: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AR64ToAB64(
        src_ar64: *const u16,
        src_stride_ar64: ::std::os::raw::c_int,
        dst_ab64: *mut u16,
        dst_stride_ab64: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MJPGToARGB(
        sample: *const u8,
        sample_size: usize,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Android420ToARGB(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_pixel_stride_uv: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Android420ToABGR(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_pixel_stride_uv: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12ToRGB565(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_rgb565: *mut u8,
        dst_stride_rgb565: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToBGRA(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_bgra: *mut u8,
        dst_stride_bgra: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToRGBA(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgba: *mut u8,
        dst_stride_rgba: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToBGRA(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_bgra: *mut u8,
        dst_stride_bgra: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToRGBA(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgba: *mut u8,
        dst_stride_rgba: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToRGB24(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToRAW(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_raw: *mut u8,
        dst_stride_raw: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H420ToRGB24(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H420ToRAW(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_raw: *mut u8,
        dst_stride_raw: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn J420ToRGB24(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn J420ToRAW(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_raw: *mut u8,
        dst_stride_raw: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToRGB24(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToRAW(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_raw: *mut u8,
        dst_stride_raw: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToRGB565(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb565: *mut u8,
        dst_stride_rgb565: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn J420ToRGB565(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb565: *mut u8,
        dst_stride_rgb565: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H420ToRGB565(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb565: *mut u8,
        dst_stride_rgb565: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToRGB565(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb565: *mut u8,
        dst_stride_rgb565: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToRGB565Dither(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb565: *mut u8,
        dst_stride_rgb565: ::std::os::raw::c_int,
        dither4x4: *const u8,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToARGB1555(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb1555: *mut u8,
        dst_stride_argb1555: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToARGB4444(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb4444: *mut u8,
        dst_stride_argb4444: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToAR30(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToAB30(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_ab30: *mut u8,
        dst_stride_ab30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H420ToAR30(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn H420ToAB30(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_ab30: *mut u8,
        dst_stride_ab30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToARGBMatrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToARGBMatrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444ToARGBMatrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444ToRGB24Matrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010ToAR30Matrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210ToAR30Matrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I410ToAR30Matrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010ToARGBMatrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I012ToAR30Matrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I012ToARGBMatrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210ToARGBMatrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I410ToARGBMatrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn P010ToARGBMatrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn P210ToARGBMatrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn P010ToAR30Matrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn P210ToAR30Matrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420AlphaToARGBMatrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u8,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422AlphaToARGBMatrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u8,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444AlphaToARGBMatrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u8,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010AlphaToARGBMatrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u16,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210AlphaToARGBMatrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u16,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I410AlphaToARGBMatrix(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u16,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12ToARGBMatrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV21ToARGBMatrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_vu: *const u8,
        src_stride_vu: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12ToRGB565Matrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_rgb565: *mut u8,
        dst_stride_rgb565: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12ToRGB24Matrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV21ToRGB24Matrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_vu: *const u8,
        src_stride_vu: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Android420ToARGBMatrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_pixel_stride_uv: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToRGBAMatrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgba: *mut u8,
        dst_stride_rgba: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToRGBAMatrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgba: *mut u8,
        dst_stride_rgba: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToRGB24Matrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToRGB24Matrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToRGB565Matrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb565: *mut u8,
        dst_stride_rgb565: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToRGB565Matrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb565: *mut u8,
        dst_stride_rgb565: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToAR30Matrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I400ToARGBMatrix(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToARGBMatrixFilter(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToARGBMatrixFilter(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToRGB24MatrixFilter(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToRGB24MatrixFilter(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010ToAR30MatrixFilter(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210ToAR30MatrixFilter(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010ToARGBMatrixFilter(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210ToARGBMatrixFilter(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420AlphaToARGBMatrixFilter(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u8,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422AlphaToARGBMatrixFilter(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u8,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010AlphaToARGBMatrixFilter(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u16,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210AlphaToARGBMatrixFilter(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        src_a: *const u16,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        attenuate: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn P010ToARGBMatrixFilter(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn P210ToARGBMatrixFilter(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn P010ToAR30MatrixFilter(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn P210ToAR30MatrixFilter(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        filter: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ConvertToARGB(
        sample: *const u8,
        sample_size: usize,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        crop_x: ::std::os::raw::c_int,
        crop_y: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        crop_width: ::std::os::raw::c_int,
        crop_height: ::std::os::raw::c_int,
        rotation: RotationMode,
        fourcc: u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToI010(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToI012(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToI422(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToI444(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I400Copy(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToNV12(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToNV21(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        dst_stride_vu: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToYUY2(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_yuy2: *mut u8,
        dst_stride_yuy2: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToUYVY(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_uyvy: *mut u8,
        dst_stride_uyvy: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ConvertFromI420(
        y: *const u8,
        y_stride: ::std::os::raw::c_int,
        u: *const u8,
        u_stride: ::std::os::raw::c_int,
        v: *const u8,
        v_stride: ::std::os::raw::c_int,
        dst_sample: *mut u8,
        dst_sample_stride: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        fourcc: u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn CopyPlane(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CopyPlane_16(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert16To8Plane(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert8To16Plane(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SetPlane(
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        value: u32,
    );
}
extern "C" {
    pub fn DetilePlane(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        tile_height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn DetilePlane_16(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        tile_height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn DetileSplitUVPlane(
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        tile_height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileToYUY2(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_yuy2: *mut u8,
        dst_stride_yuy2: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        tile_height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVPlane(
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVPlane(
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVPlane_16(
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        depth: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVPlane_16(
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_uv: *mut u16,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        depth: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ConvertToMSBPlane_16(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        depth: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ConvertToLSBPlane_16(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        depth: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfMergeUVPlane(
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SwapUVPlane(
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        dst_stride_vu: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitRGBPlane(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_r: *mut u8,
        dst_stride_r: ::std::os::raw::c_int,
        dst_g: *mut u8,
        dst_stride_g: ::std::os::raw::c_int,
        dst_b: *mut u8,
        dst_stride_b: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeRGBPlane(
        src_r: *const u8,
        src_stride_r: ::std::os::raw::c_int,
        src_g: *const u8,
        src_stride_g: ::std::os::raw::c_int,
        src_b: *const u8,
        src_stride_b: ::std::os::raw::c_int,
        dst_rgb: *mut u8,
        dst_stride_rgb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitARGBPlane(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_r: *mut u8,
        dst_stride_r: ::std::os::raw::c_int,
        dst_g: *mut u8,
        dst_stride_g: ::std::os::raw::c_int,
        dst_b: *mut u8,
        dst_stride_b: ::std::os::raw::c_int,
        dst_a: *mut u8,
        dst_stride_a: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGBPlane(
        src_r: *const u8,
        src_stride_r: ::std::os::raw::c_int,
        src_g: *const u8,
        src_stride_g: ::std::os::raw::c_int,
        src_b: *const u8,
        src_stride_b: ::std::os::raw::c_int,
        src_a: *const u8,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXR30Plane(
        src_r: *const u16,
        src_stride_r: ::std::os::raw::c_int,
        src_g: *const u16,
        src_stride_g: ::std::os::raw::c_int,
        src_b: *const u16,
        src_stride_b: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        depth: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeAR64Plane(
        src_r: *const u16,
        src_stride_r: ::std::os::raw::c_int,
        src_g: *const u16,
        src_stride_g: ::std::os::raw::c_int,
        src_b: *const u16,
        src_stride_b: ::std::os::raw::c_int,
        src_a: *const u16,
        src_stride_a: ::std::os::raw::c_int,
        dst_ar64: *mut u16,
        dst_stride_ar64: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        depth: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGB16To8Plane(
        src_r: *const u16,
        src_stride_r: ::std::os::raw::c_int,
        src_g: *const u16,
        src_stride_g: ::std::os::raw::c_int,
        src_b: *const u16,
        src_stride_b: ::std::os::raw::c_int,
        src_a: *const u16,
        src_stride_a: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        depth: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I400ToI400(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422Copy(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444Copy(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210Copy(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I410Copy(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12Copy(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV21Copy(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_vu: *const u8,
        src_stride_vu: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        dst_stride_vu: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn YUY2ToI422(
        src_yuy2: *const u8,
        src_stride_yuy2: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn UYVYToI422(
        src_uyvy: *const u8,
        src_stride_uyvy: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn YUY2ToNV12(
        src_yuy2: *const u8,
        src_stride_yuy2: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn UYVYToNV12(
        src_uyvy: *const u8,
        src_stride_uyvy: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV21ToNV12(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_vu: *const u8,
        src_stride_vu: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn YUY2ToY(
        src_yuy2: *const u8,
        src_stride_yuy2: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn UYVYToY(
        src_uyvy: *const u8,
        src_stride_uyvy: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420ToI400(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420Mirror(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I400Mirror(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12Mirror(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBMirror(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RGB24Mirror(
        src_rgb24: *const u8,
        src_stride_rgb24: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MirrorPlane(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MirrorUVPlane(
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToRGB24(
        src_raw: *const u8,
        src_stride_raw: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420Rect(
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        value_y: ::std::os::raw::c_int,
        value_u: ::std::os::raw::c_int,
        value_v: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBRect(
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        dst_x: ::std::os::raw::c_int,
        dst_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        value: u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBGrayTo(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBGray(
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        dst_x: ::std::os::raw::c_int,
        dst_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBSepia(
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        dst_x: ::std::os::raw::c_int,
        dst_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBColorMatrix(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        matrix_argb: *const i8,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RGBColorMatrix(
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        matrix_rgb: *const i8,
        dst_x: ::std::os::raw::c_int,
        dst_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBColorTable(
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        table_argb: *const u8,
        dst_x: ::std::os::raw::c_int,
        dst_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RGBColorTable(
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        table_argb: *const u8,
        dst_x: ::std::os::raw::c_int,
        dst_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBLumaColorTable(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        luma: *const u8,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBPolynomial(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        poly: *const f32,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn HalfFloatPlane(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        scale: f32,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ByteToFloat(
        src_y: *const u8,
        dst_y: *mut f32,
        scale: f32,
        width: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBQuantize(
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        scale: ::std::os::raw::c_int,
        interval_size: ::std::os::raw::c_int,
        interval_offset: ::std::os::raw::c_int,
        dst_x: ::std::os::raw::c_int,
        dst_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBCopyAlpha(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBExtractAlpha(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_a: *mut u8,
        dst_stride_a: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBCopyYToAlpha(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBBlend(
        src_argb0: *const u8,
        src_stride_argb0: ::std::os::raw::c_int,
        src_argb1: *const u8,
        src_stride_argb1: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn BlendPlane(
        src_y0: *const u8,
        src_stride_y0: ::std::os::raw::c_int,
        src_y1: *const u8,
        src_stride_y1: ::std::os::raw::c_int,
        alpha: *const u8,
        alpha_stride: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420Blend(
        src_y0: *const u8,
        src_stride_y0: ::std::os::raw::c_int,
        src_u0: *const u8,
        src_stride_u0: ::std::os::raw::c_int,
        src_v0: *const u8,
        src_stride_v0: ::std::os::raw::c_int,
        src_y1: *const u8,
        src_stride_y1: ::std::os::raw::c_int,
        src_u1: *const u8,
        src_stride_u1: ::std::os::raw::c_int,
        src_v1: *const u8,
        src_stride_v1: ::std::os::raw::c_int,
        alpha: *const u8,
        alpha_stride: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBMultiply(
        src_argb0: *const u8,
        src_stride_argb0: ::std::os::raw::c_int,
        src_argb1: *const u8,
        src_stride_argb1: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBAdd(
        src_argb0: *const u8,
        src_stride_argb0: ::std::os::raw::c_int,
        src_argb1: *const u8,
        src_stride_argb1: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBSubtract(
        src_argb0: *const u8,
        src_stride_argb0: ::std::os::raw::c_int,
        src_argb1: *const u8,
        src_stride_argb1: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToYUY2(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_yuy2: *mut u8,
        dst_stride_yuy2: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToUYVY(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_uyvy: *mut u8,
        dst_stride_uyvy: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBAttenuate(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBUnattenuate(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBComputeCumulativeSum(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_cumsum: *mut i32,
        dst_stride32_cumsum: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBBlur(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        dst_cumsum: *mut i32,
        dst_stride32_cumsum: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        radius: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn GaussPlane_F32(
        src: *const f32,
        src_stride: ::std::os::raw::c_int,
        dst: *mut f32,
        dst_stride: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBShade(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        value: u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn InterpolatePlane(
        src0: *const u8,
        src_stride0: ::std::os::raw::c_int,
        src1: *const u8,
        src_stride1: ::std::os::raw::c_int,
        dst: *mut u8,
        dst_stride: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        interpolation: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn InterpolatePlane_16(
        src0: *const u16,
        src_stride0: ::std::os::raw::c_int,
        src1: *const u16,
        src_stride1: ::std::os::raw::c_int,
        dst: *mut u16,
        dst_stride: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        interpolation: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBInterpolate(
        src_argb0: *const u8,
        src_stride_argb0: ::std::os::raw::c_int,
        src_argb1: *const u8,
        src_stride_argb1: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        interpolation: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420Interpolate(
        src0_y: *const u8,
        src0_stride_y: ::std::os::raw::c_int,
        src0_u: *const u8,
        src0_stride_u: ::std::os::raw::c_int,
        src0_v: *const u8,
        src0_stride_v: ::std::os::raw::c_int,
        src1_y: *const u8,
        src1_stride_y: ::std::os::raw::c_int,
        src1_u: *const u8,
        src1_stride_u: ::std::os::raw::c_int,
        src1_v: *const u8,
        src1_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        interpolation: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBAffineRow_C(
        src_argb: *const u8,
        src_argb_stride: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        uv_dudv: *const f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAffineRow_SSE2(
        src_argb: *const u8,
        src_argb_stride: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        uv_dudv: *const f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShuffle(
        src_bgra: *const u8,
        src_stride_bgra: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        shuffler: *const u8,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AR64Shuffle(
        src_ar64: *const u16,
        src_stride_ar64: ::std::os::raw::c_int,
        dst_ar64: *mut u16,
        dst_stride_ar64: ::std::os::raw::c_int,
        shuffler: *const u8,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBSobelToPlane(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBSobel(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBSobelXY(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444ToI420(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444ToNV12(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I444ToNV21(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        dst_stride_vu: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToI420(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToI444(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToI210(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MM21ToNV12(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MM21ToI420(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MM21ToYUY2(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_yuy2: *mut u8,
        dst_stride_yuy2: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MT2TToP010(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u16,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I422ToNV21(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        dst_stride_vu: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I420Copy(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010Copy(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010ToI420(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210ToI420(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210ToI422(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I410ToI420(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I410ToI444(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I012ToI420(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I212ToI422(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I212ToI420(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I412ToI444(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I412ToI420(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I410ToI010(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210ToI010(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010ToI410(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210ToI410(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I010ToP010(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u16,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I210ToP210(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u16,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I012ToP012(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u16,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I212ToP212(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u16,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u16,
        src_stride_v: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u16,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I400ToI420(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn I400ToNV21(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        dst_stride_vu: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12ToI420(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV21ToI420(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_vu: *const u8,
        src_stride_vu: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV12ToNV24(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn NV16ToNV24(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn P010ToI010(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn P012ToI012(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u16,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u16,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn P010ToP410(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u16,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn P210ToP410(
        src_y: *const u16,
        src_stride_y: ::std::os::raw::c_int,
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u16,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u16,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn YUY2ToI420(
        src_yuy2: *const u8,
        src_stride_yuy2: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn UYVYToI420(
        src_uyvy: *const u8,
        src_stride_uyvy: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AYUVToNV12(
        src_ayuv: *const u8,
        src_stride_ayuv: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AYUVToNV21(
        src_ayuv: *const u8,
        src_stride_ayuv: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        dst_stride_vu: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Android420ToI420(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_pixel_stride_uv: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToI420(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToI420Alpha(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        dst_a: *mut u8,
        dst_stride_a: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn BGRAToI420(
        src_bgra: *const u8,
        src_stride_bgra: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ABGRToI420(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RGBAToI420(
        src_rgba: *const u8,
        src_stride_rgba: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RGB24ToI420(
        src_rgb24: *const u8,
        src_stride_rgb24: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RGB24ToJ420(
        src_rgb24: *const u8,
        src_stride_rgb24: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RAWToI420(
        src_raw: *const u8,
        src_stride_raw: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RAWToJ420(
        src_raw: *const u8,
        src_stride_raw: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RGB565ToI420(
        src_rgb565: *const u8,
        src_stride_rgb565: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGB1555ToI420(
        src_argb1555: *const u8,
        src_stride_argb1555: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGB4444ToI420(
        src_argb4444: *const u8,
        src_stride_argb4444: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RGB24ToJ400(
        src_rgb24: *const u8,
        src_stride_rgb24: ::std::os::raw::c_int,
        dst_yj: *mut u8,
        dst_stride_yj: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RAWToJ400(
        src_raw: *const u8,
        src_stride_raw: ::std::os::raw::c_int,
        dst_yj: *mut u8,
        dst_stride_yj: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MJPGToI420(
        sample: *const u8,
        sample_size: usize,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MJPGToNV21(
        sample: *const u8,
        sample_size: usize,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        dst_stride_vu: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MJPGToNV12(
        sample: *const u8,
        sample_size: usize,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MJPGSize(
        sample: *const u8,
        sample_size: usize,
        width: *mut ::std::os::raw::c_int,
        height: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ConvertToI420(
        sample: *const u8,
        sample_size: usize,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        crop_x: ::std::os::raw::c_int,
        crop_y: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        crop_width: ::std::os::raw::c_int,
        crop_height: ::std::os::raw::c_int,
        rotation: RotationMode,
        fourcc: u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToBGRA(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_bgra: *mut u8,
        dst_stride_bgra: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToABGR(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_abgr: *mut u8,
        dst_stride_abgr: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToRGBA(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_rgba: *mut u8,
        dst_stride_rgba: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ABGRToAR30(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToAR30(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_ar30: *mut u8,
        dst_stride_ar30: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToRGB24(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_rgb24: *mut u8,
        dst_stride_rgb24: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToRAW(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_raw: *mut u8,
        dst_stride_raw: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToRGB565(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_rgb565: *mut u8,
        dst_stride_rgb565: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToRGB565Dither(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_rgb565: *mut u8,
        dst_stride_rgb565: ::std::os::raw::c_int,
        dither4x4: *const u8,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToARGB1555(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb1555: *mut u8,
        dst_stride_argb1555: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToARGB4444(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb4444: *mut u8,
        dst_stride_argb4444: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToI444(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToAR64(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_ar64: *mut u16,
        dst_stride_ar64: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToAB64(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_ab64: *mut u16,
        dst_stride_ab64: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToI422(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_stride_u: ::std::os::raw::c_int,
        dst_v: *mut u8,
        dst_stride_v: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToJ420(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_yj: *mut u8,
        dst_stride_yj: ::std::os::raw::c_int,
        dst_uj: *mut u8,
        dst_stride_uj: ::std::os::raw::c_int,
        dst_vj: *mut u8,
        dst_stride_vj: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToJ422(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_yj: *mut u8,
        dst_stride_yj: ::std::os::raw::c_int,
        dst_uj: *mut u8,
        dst_stride_uj: ::std::os::raw::c_int,
        dst_vj: *mut u8,
        dst_stride_vj: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToJ400(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_yj: *mut u8,
        dst_stride_yj: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ABGRToJ420(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_yj: *mut u8,
        dst_stride_yj: ::std::os::raw::c_int,
        dst_uj: *mut u8,
        dst_stride_uj: ::std::os::raw::c_int,
        dst_vj: *mut u8,
        dst_stride_vj: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ABGRToJ422(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_yj: *mut u8,
        dst_stride_yj: ::std::os::raw::c_int,
        dst_uj: *mut u8,
        dst_stride_uj: ::std::os::raw::c_int,
        dst_vj: *mut u8,
        dst_stride_vj: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ABGRToJ400(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_yj: *mut u8,
        dst_stride_yj: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RGBAToJ400(
        src_rgba: *const u8,
        src_stride_rgba: ::std::os::raw::c_int,
        dst_yj: *mut u8,
        dst_stride_yj: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToI400(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToG(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_g: *mut u8,
        dst_stride_g: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToNV12(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToNV21(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        dst_stride_vu: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ABGRToNV12(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ABGRToNV21(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        dst_stride_vu: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToYUY2(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_yuy2: *mut u8,
        dst_stride_yuy2: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBToUYVY(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_uyvy: *mut u8,
        dst_stride_uyvy: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RAWToJNV21(
        src_raw: *const u8,
        src_stride_raw: ::std::os::raw::c_int,
        dst_y: *mut u8,
        dst_stride_y: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        dst_stride_vu: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
pub const kCpuInitialized: ::std::os::raw::c_int = 1;
pub const kCpuHasARM: ::std::os::raw::c_int = 2;
pub const kCpuHasNEON: ::std::os::raw::c_int = 4;
pub const kCpuHasX86: ::std::os::raw::c_int = 8;
pub const kCpuHasSSE2: ::std::os::raw::c_int = 16;
pub const kCpuHasSSSE3: ::std::os::raw::c_int = 32;
pub const kCpuHasSSE41: ::std::os::raw::c_int = 64;
pub const kCpuHasSSE42: ::std::os::raw::c_int = 128;
pub const kCpuHasAVX: ::std::os::raw::c_int = 256;
pub const kCpuHasAVX2: ::std::os::raw::c_int = 512;
pub const kCpuHasERMS: ::std::os::raw::c_int = 1024;
pub const kCpuHasFMA3: ::std::os::raw::c_int = 2048;
pub const kCpuHasF16C: ::std::os::raw::c_int = 4096;
pub const kCpuHasAVX512BW: ::std::os::raw::c_int = 8192;
pub const kCpuHasAVX512VL: ::std::os::raw::c_int = 16384;
pub const kCpuHasAVX512VNNI: ::std::os::raw::c_int = 32768;
pub const kCpuHasAVX512VBMI: ::std::os::raw::c_int = 65536;
pub const kCpuHasAVX512VBMI2: ::std::os::raw::c_int = 131072;
pub const kCpuHasAVX512VBITALG: ::std::os::raw::c_int = 262144;
pub const kCpuHasAVX10: ::std::os::raw::c_int = 524288;
pub const kCpuHasAVXVNNI: ::std::os::raw::c_int = 1048576;
pub const kCpuHasAVXVNNIINT8: ::std::os::raw::c_int = 2097152;
pub const kCpuHasAMXINT8: ::std::os::raw::c_int = 4194304;
pub const kCpuHasMIPS: ::std::os::raw::c_int = 8388608;
pub const kCpuHasMSA: ::std::os::raw::c_int = 16777216;
pub const kCpuHasLOONGARCH: ::std::os::raw::c_int = 33554432;
pub const kCpuHasLSX: ::std::os::raw::c_int = 67108864;
pub const kCpuHasLASX: ::std::os::raw::c_int = 134217728;
pub const kCpuHasRISCV: ::std::os::raw::c_int = 268435456;
pub const kCpuHasRVV: ::std::os::raw::c_int = 536870912;
pub const kCpuHasRVVZVFH: ::std::os::raw::c_int = 1073741824;
extern "C" {
    pub fn InitCpuFlags() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ArmCpuCaps(cpuinfo_name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MipsCpuCaps(cpuinfo_name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn RiscvCpuCaps(cpuinfo_name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MaskCpuFlags(enable_flags: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn CpuId(
        info_eax: ::std::os::raw::c_int,
        info_ecx: ::std::os::raw::c_int,
        cpu_info: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBRotate(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        mode: RotationMode,
    ) -> ::std::os::raw::c_int;
}
pub type _Float32 = f32;
pub type _Float64 = f64;
pub type _Float32x = f64;
pub type _Float64x = u128;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct div_t {
    pub quot: ::std::os::raw::c_int,
    pub rem: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_div_t() {
    const UNINIT: ::std::mem::MaybeUninit<div_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<div_t>(),
        8usize,
        concat!("Size of: ", stringify!(div_t))
    );
    assert_eq!(
        ::std::mem::align_of::<div_t>(),
        4usize,
        concat!("Alignment of ", stringify!(div_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).quot) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(div_t),
            "::",
            stringify!(quot)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).rem) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(div_t),
            "::",
            stringify!(rem)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ldiv_t {
    pub quot: ::std::os::raw::c_long,
    pub rem: ::std::os::raw::c_long,
}
#[test]
fn bindgen_test_layout_ldiv_t() {
    const UNINIT: ::std::mem::MaybeUninit<ldiv_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<ldiv_t>(),
        16usize,
        concat!("Size of: ", stringify!(ldiv_t))
    );
    assert_eq!(
        ::std::mem::align_of::<ldiv_t>(),
        8usize,
        concat!("Alignment of ", stringify!(ldiv_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).quot) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ldiv_t),
            "::",
            stringify!(quot)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).rem) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ldiv_t),
            "::",
            stringify!(rem)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lldiv_t {
    pub quot: ::std::os::raw::c_longlong,
    pub rem: ::std::os::raw::c_longlong,
}
#[test]
fn bindgen_test_layout_lldiv_t() {
    const UNINIT: ::std::mem::MaybeUninit<lldiv_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<lldiv_t>(),
        16usize,
        concat!("Size of: ", stringify!(lldiv_t))
    );
    assert_eq!(
        ::std::mem::align_of::<lldiv_t>(),
        8usize,
        concat!("Alignment of ", stringify!(lldiv_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).quot) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(lldiv_t),
            "::",
            stringify!(quot)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).rem) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(lldiv_t),
            "::",
            stringify!(rem)
        )
    );
}
extern "C" {
    pub fn __ctype_get_mb_cur_max() -> usize;
}
extern "C" {
    pub fn atof(__nptr: *const ::std::os::raw::c_char) -> f64;
}
extern "C" {
    pub fn atoi(__nptr: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn atol(__nptr: *const ::std::os::raw::c_char) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn atoll(__nptr: *const ::std::os::raw::c_char) -> ::std::os::raw::c_longlong;
}
extern "C" {
    pub fn strtod(
        __nptr: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
    ) -> f64;
}
extern "C" {
    pub fn strtof(
        __nptr: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
    ) -> f32;
}
extern "C" {
    pub fn strtold(
        __nptr: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
    ) -> u128;
}
extern "C" {
    pub fn strtol(
        __nptr: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn strtoul(
        __nptr: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_ulong;
}
extern "C" {
    pub fn strtoq(
        __nptr: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_longlong;
}
extern "C" {
    pub fn strtouq(
        __nptr: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_ulonglong;
}
extern "C" {
    pub fn strtoll(
        __nptr: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_longlong;
}
extern "C" {
    pub fn strtoull(
        __nptr: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_ulonglong;
}
extern "C" {
    pub fn l64a(__n: ::std::os::raw::c_long) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn a64l(__s: *const ::std::os::raw::c_char) -> ::std::os::raw::c_long;
}
pub type u_char = __u_char;
pub type u_short = __u_short;
pub type u_int = __u_int;
pub type u_long = __u_long;
pub type quad_t = __quad_t;
pub type u_quad_t = __u_quad_t;
pub type fsid_t = __fsid_t;
pub type loff_t = __loff_t;
pub type ino_t = __ino_t;
pub type dev_t = __dev_t;
pub type gid_t = __gid_t;
pub type mode_t = __mode_t;
pub type nlink_t = __nlink_t;
pub type uid_t = __uid_t;
pub type off_t = __off_t;
pub type pid_t = __pid_t;
pub type id_t = __id_t;
pub type daddr_t = __daddr_t;
pub type caddr_t = __caddr_t;
pub type key_t = __key_t;
pub type clock_t = __clock_t;
pub type clockid_t = __clockid_t;
pub type time_t = __time_t;
pub type timer_t = __timer_t;
pub type ulong = ::std::os::raw::c_ulong;
pub type ushort = ::std::os::raw::c_ushort;
pub type uint = ::std::os::raw::c_uint;
pub type u_int8_t = __uint8_t;
pub type u_int16_t = __uint16_t;
pub type u_int32_t = __uint32_t;
pub type u_int64_t = __uint64_t;
pub type register_t = ::std::os::raw::c_long;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __sigset_t {
    pub __val: [::std::os::raw::c_ulong; 16usize],
}
#[test]
fn bindgen_test_layout___sigset_t() {
    const UNINIT: ::std::mem::MaybeUninit<__sigset_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<__sigset_t>(),
        128usize,
        concat!("Size of: ", stringify!(__sigset_t))
    );
    assert_eq!(
        ::std::mem::align_of::<__sigset_t>(),
        8usize,
        concat!("Alignment of ", stringify!(__sigset_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__val) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__sigset_t),
            "::",
            stringify!(__val)
        )
    );
}
pub type sigset_t = __sigset_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct timeval {
    pub tv_sec: __time_t,
    pub tv_usec: __suseconds_t,
}
#[test]
fn bindgen_test_layout_timeval() {
    const UNINIT: ::std::mem::MaybeUninit<timeval> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<timeval>(),
        16usize,
        concat!("Size of: ", stringify!(timeval))
    );
    assert_eq!(
        ::std::mem::align_of::<timeval>(),
        8usize,
        concat!("Alignment of ", stringify!(timeval))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).tv_sec) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(timeval),
            "::",
            stringify!(tv_sec)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).tv_usec) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(timeval),
            "::",
            stringify!(tv_usec)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct timespec {
    pub tv_sec: __time_t,
    pub tv_nsec: __syscall_slong_t,
}
#[test]
fn bindgen_test_layout_timespec() {
    const UNINIT: ::std::mem::MaybeUninit<timespec> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<timespec>(),
        16usize,
        concat!("Size of: ", stringify!(timespec))
    );
    assert_eq!(
        ::std::mem::align_of::<timespec>(),
        8usize,
        concat!("Alignment of ", stringify!(timespec))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).tv_sec) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(timespec),
            "::",
            stringify!(tv_sec)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).tv_nsec) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(timespec),
            "::",
            stringify!(tv_nsec)
        )
    );
}
pub type suseconds_t = __suseconds_t;
pub type __fd_mask = ::std::os::raw::c_long;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct fd_set {
    pub __fds_bits: [__fd_mask; 16usize],
}
#[test]
fn bindgen_test_layout_fd_set() {
    const UNINIT: ::std::mem::MaybeUninit<fd_set> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<fd_set>(),
        128usize,
        concat!("Size of: ", stringify!(fd_set))
    );
    assert_eq!(
        ::std::mem::align_of::<fd_set>(),
        8usize,
        concat!("Alignment of ", stringify!(fd_set))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__fds_bits) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(fd_set),
            "::",
            stringify!(__fds_bits)
        )
    );
}
pub type fd_mask = __fd_mask;
extern "C" {
    pub fn select(
        __nfds: ::std::os::raw::c_int,
        __readfds: *mut fd_set,
        __writefds: *mut fd_set,
        __exceptfds: *mut fd_set,
        __timeout: *mut timeval,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pselect(
        __nfds: ::std::os::raw::c_int,
        __readfds: *mut fd_set,
        __writefds: *mut fd_set,
        __exceptfds: *mut fd_set,
        __timeout: *const timespec,
        __sigmask: *const __sigset_t,
    ) -> ::std::os::raw::c_int;
}
pub type blksize_t = __blksize_t;
pub type blkcnt_t = __blkcnt_t;
pub type fsblkcnt_t = __fsblkcnt_t;
pub type fsfilcnt_t = __fsfilcnt_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub union __atomic_wide_counter {
    pub __value64: ::std::os::raw::c_ulonglong,
    pub __value32: __atomic_wide_counter__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __atomic_wide_counter__bindgen_ty_1 {
    pub __low: ::std::os::raw::c_uint,
    pub __high: ::std::os::raw::c_uint,
}
#[test]
fn bindgen_test_layout___atomic_wide_counter__bindgen_ty_1() {
    const UNINIT: ::std::mem::MaybeUninit<__atomic_wide_counter__bindgen_ty_1> =
        ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<__atomic_wide_counter__bindgen_ty_1>(),
        8usize,
        concat!("Size of: ", stringify!(__atomic_wide_counter__bindgen_ty_1))
    );
    assert_eq!(
        ::std::mem::align_of::<__atomic_wide_counter__bindgen_ty_1>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(__atomic_wide_counter__bindgen_ty_1)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__low) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__atomic_wide_counter__bindgen_ty_1),
            "::",
            stringify!(__low)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__high) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(__atomic_wide_counter__bindgen_ty_1),
            "::",
            stringify!(__high)
        )
    );
}
#[test]
fn bindgen_test_layout___atomic_wide_counter() {
    const UNINIT: ::std::mem::MaybeUninit<__atomic_wide_counter> =
        ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<__atomic_wide_counter>(),
        8usize,
        concat!("Size of: ", stringify!(__atomic_wide_counter))
    );
    assert_eq!(
        ::std::mem::align_of::<__atomic_wide_counter>(),
        8usize,
        concat!("Alignment of ", stringify!(__atomic_wide_counter))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__value64) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__atomic_wide_counter),
            "::",
            stringify!(__value64)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__value32) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__atomic_wide_counter),
            "::",
            stringify!(__value32)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __pthread_internal_list {
    pub __prev: *mut __pthread_internal_list,
    pub __next: *mut __pthread_internal_list,
}
#[test]
fn bindgen_test_layout___pthread_internal_list() {
    const UNINIT: ::std::mem::MaybeUninit<__pthread_internal_list> =
        ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<__pthread_internal_list>(),
        16usize,
        concat!("Size of: ", stringify!(__pthread_internal_list))
    );
    assert_eq!(
        ::std::mem::align_of::<__pthread_internal_list>(),
        8usize,
        concat!("Alignment of ", stringify!(__pthread_internal_list))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__prev) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_internal_list),
            "::",
            stringify!(__prev)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__next) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_internal_list),
            "::",
            stringify!(__next)
        )
    );
}
pub type __pthread_list_t = __pthread_internal_list;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __pthread_internal_slist {
    pub __next: *mut __pthread_internal_slist,
}
#[test]
fn bindgen_test_layout___pthread_internal_slist() {
    const UNINIT: ::std::mem::MaybeUninit<__pthread_internal_slist> =
        ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<__pthread_internal_slist>(),
        8usize,
        concat!("Size of: ", stringify!(__pthread_internal_slist))
    );
    assert_eq!(
        ::std::mem::align_of::<__pthread_internal_slist>(),
        8usize,
        concat!("Alignment of ", stringify!(__pthread_internal_slist))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__next) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_internal_slist),
            "::",
            stringify!(__next)
        )
    );
}
pub type __pthread_slist_t = __pthread_internal_slist;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __pthread_mutex_s {
    pub __lock: ::std::os::raw::c_int,
    pub __count: ::std::os::raw::c_uint,
    pub __owner: ::std::os::raw::c_int,
    pub __nusers: ::std::os::raw::c_uint,
    pub __kind: ::std::os::raw::c_int,
    pub __spins: ::std::os::raw::c_short,
    pub __elision: ::std::os::raw::c_short,
    pub __list: __pthread_list_t,
}
#[test]
fn bindgen_test_layout___pthread_mutex_s() {
    const UNINIT: ::std::mem::MaybeUninit<__pthread_mutex_s> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<__pthread_mutex_s>(),
        40usize,
        concat!("Size of: ", stringify!(__pthread_mutex_s))
    );
    assert_eq!(
        ::std::mem::align_of::<__pthread_mutex_s>(),
        8usize,
        concat!("Alignment of ", stringify!(__pthread_mutex_s))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__lock) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_mutex_s),
            "::",
            stringify!(__lock)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__count) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_mutex_s),
            "::",
            stringify!(__count)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__owner) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_mutex_s),
            "::",
            stringify!(__owner)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__nusers) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_mutex_s),
            "::",
            stringify!(__nusers)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__kind) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_mutex_s),
            "::",
            stringify!(__kind)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__spins) as usize - ptr as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_mutex_s),
            "::",
            stringify!(__spins)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__elision) as usize - ptr as usize },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_mutex_s),
            "::",
            stringify!(__elision)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__list) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_mutex_s),
            "::",
            stringify!(__list)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __pthread_rwlock_arch_t {
    pub __readers: ::std::os::raw::c_uint,
    pub __writers: ::std::os::raw::c_uint,
    pub __wrphase_futex: ::std::os::raw::c_uint,
    pub __writers_futex: ::std::os::raw::c_uint,
    pub __pad3: ::std::os::raw::c_uint,
    pub __pad4: ::std::os::raw::c_uint,
    pub __cur_writer: ::std::os::raw::c_int,
    pub __shared: ::std::os::raw::c_int,
    pub __rwelision: ::std::os::raw::c_schar,
    pub __pad1: [::std::os::raw::c_uchar; 7usize],
    pub __pad2: ::std::os::raw::c_ulong,
    pub __flags: ::std::os::raw::c_uint,
}
#[test]
fn bindgen_test_layout___pthread_rwlock_arch_t() {
    const UNINIT: ::std::mem::MaybeUninit<__pthread_rwlock_arch_t> =
        ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<__pthread_rwlock_arch_t>(),
        56usize,
        concat!("Size of: ", stringify!(__pthread_rwlock_arch_t))
    );
    assert_eq!(
        ::std::mem::align_of::<__pthread_rwlock_arch_t>(),
        8usize,
        concat!("Alignment of ", stringify!(__pthread_rwlock_arch_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__readers) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_rwlock_arch_t),
            "::",
            stringify!(__readers)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__writers) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_rwlock_arch_t),
            "::",
            stringify!(__writers)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__wrphase_futex) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_rwlock_arch_t),
            "::",
            stringify!(__wrphase_futex)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__writers_futex) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_rwlock_arch_t),
            "::",
            stringify!(__writers_futex)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__pad3) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_rwlock_arch_t),
            "::",
            stringify!(__pad3)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__pad4) as usize - ptr as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_rwlock_arch_t),
            "::",
            stringify!(__pad4)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__cur_writer) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_rwlock_arch_t),
            "::",
            stringify!(__cur_writer)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__shared) as usize - ptr as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_rwlock_arch_t),
            "::",
            stringify!(__shared)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__rwelision) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_rwlock_arch_t),
            "::",
            stringify!(__rwelision)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__pad1) as usize - ptr as usize },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_rwlock_arch_t),
            "::",
            stringify!(__pad1)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__pad2) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_rwlock_arch_t),
            "::",
            stringify!(__pad2)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__flags) as usize - ptr as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_rwlock_arch_t),
            "::",
            stringify!(__flags)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct __pthread_cond_s {
    pub __wseq: __atomic_wide_counter,
    pub __g1_start: __atomic_wide_counter,
    pub __g_refs: [::std::os::raw::c_uint; 2usize],
    pub __g_size: [::std::os::raw::c_uint; 2usize],
    pub __g1_orig_size: ::std::os::raw::c_uint,
    pub __wrefs: ::std::os::raw::c_uint,
    pub __g_signals: [::std::os::raw::c_uint; 2usize],
}
#[test]
fn bindgen_test_layout___pthread_cond_s() {
    const UNINIT: ::std::mem::MaybeUninit<__pthread_cond_s> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<__pthread_cond_s>(),
        48usize,
        concat!("Size of: ", stringify!(__pthread_cond_s))
    );
    assert_eq!(
        ::std::mem::align_of::<__pthread_cond_s>(),
        8usize,
        concat!("Alignment of ", stringify!(__pthread_cond_s))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__wseq) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_cond_s),
            "::",
            stringify!(__wseq)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__g1_start) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_cond_s),
            "::",
            stringify!(__g1_start)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__g_refs) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_cond_s),
            "::",
            stringify!(__g_refs)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__g_size) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_cond_s),
            "::",
            stringify!(__g_size)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__g1_orig_size) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_cond_s),
            "::",
            stringify!(__g1_orig_size)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__wrefs) as usize - ptr as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_cond_s),
            "::",
            stringify!(__wrefs)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__g_signals) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(__pthread_cond_s),
            "::",
            stringify!(__g_signals)
        )
    );
}
pub type __tss_t = ::std::os::raw::c_uint;
pub type __thrd_t = ::std::os::raw::c_ulong;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __once_flag {
    pub __data: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout___once_flag() {
    const UNINIT: ::std::mem::MaybeUninit<__once_flag> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<__once_flag>(),
        4usize,
        concat!("Size of: ", stringify!(__once_flag))
    );
    assert_eq!(
        ::std::mem::align_of::<__once_flag>(),
        4usize,
        concat!("Alignment of ", stringify!(__once_flag))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__data) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__once_flag),
            "::",
            stringify!(__data)
        )
    );
}
pub type pthread_t = ::std::os::raw::c_ulong;
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_mutexattr_t {
    pub __size: [::std::os::raw::c_char; 4usize],
    pub __align: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_pthread_mutexattr_t() {
    const UNINIT: ::std::mem::MaybeUninit<pthread_mutexattr_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<pthread_mutexattr_t>(),
        4usize,
        concat!("Size of: ", stringify!(pthread_mutexattr_t))
    );
    assert_eq!(
        ::std::mem::align_of::<pthread_mutexattr_t>(),
        4usize,
        concat!("Alignment of ", stringify!(pthread_mutexattr_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__size) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_mutexattr_t),
            "::",
            stringify!(__size)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__align) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_mutexattr_t),
            "::",
            stringify!(__align)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_condattr_t {
    pub __size: [::std::os::raw::c_char; 4usize],
    pub __align: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_pthread_condattr_t() {
    const UNINIT: ::std::mem::MaybeUninit<pthread_condattr_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<pthread_condattr_t>(),
        4usize,
        concat!("Size of: ", stringify!(pthread_condattr_t))
    );
    assert_eq!(
        ::std::mem::align_of::<pthread_condattr_t>(),
        4usize,
        concat!("Alignment of ", stringify!(pthread_condattr_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__size) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_condattr_t),
            "::",
            stringify!(__size)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__align) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_condattr_t),
            "::",
            stringify!(__align)
        )
    );
}
pub type pthread_key_t = ::std::os::raw::c_uint;
pub type pthread_once_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_attr_t {
    pub __size: [::std::os::raw::c_char; 56usize],
    pub __align: ::std::os::raw::c_long,
}
#[test]
fn bindgen_test_layout_pthread_attr_t() {
    const UNINIT: ::std::mem::MaybeUninit<pthread_attr_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<pthread_attr_t>(),
        56usize,
        concat!("Size of: ", stringify!(pthread_attr_t))
    );
    assert_eq!(
        ::std::mem::align_of::<pthread_attr_t>(),
        8usize,
        concat!("Alignment of ", stringify!(pthread_attr_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__size) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_attr_t),
            "::",
            stringify!(__size)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__align) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_attr_t),
            "::",
            stringify!(__align)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_mutex_t {
    pub __data: __pthread_mutex_s,
    pub __size: [::std::os::raw::c_char; 40usize],
    pub __align: ::std::os::raw::c_long,
}
#[test]
fn bindgen_test_layout_pthread_mutex_t() {
    const UNINIT: ::std::mem::MaybeUninit<pthread_mutex_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<pthread_mutex_t>(),
        40usize,
        concat!("Size of: ", stringify!(pthread_mutex_t))
    );
    assert_eq!(
        ::std::mem::align_of::<pthread_mutex_t>(),
        8usize,
        concat!("Alignment of ", stringify!(pthread_mutex_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__data) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_mutex_t),
            "::",
            stringify!(__data)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__size) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_mutex_t),
            "::",
            stringify!(__size)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__align) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_mutex_t),
            "::",
            stringify!(__align)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_cond_t {
    pub __data: __pthread_cond_s,
    pub __size: [::std::os::raw::c_char; 48usize],
    pub __align: ::std::os::raw::c_longlong,
}
#[test]
fn bindgen_test_layout_pthread_cond_t() {
    const UNINIT: ::std::mem::MaybeUninit<pthread_cond_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<pthread_cond_t>(),
        48usize,
        concat!("Size of: ", stringify!(pthread_cond_t))
    );
    assert_eq!(
        ::std::mem::align_of::<pthread_cond_t>(),
        8usize,
        concat!("Alignment of ", stringify!(pthread_cond_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__data) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_cond_t),
            "::",
            stringify!(__data)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__size) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_cond_t),
            "::",
            stringify!(__size)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__align) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_cond_t),
            "::",
            stringify!(__align)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_rwlock_t {
    pub __data: __pthread_rwlock_arch_t,
    pub __size: [::std::os::raw::c_char; 56usize],
    pub __align: ::std::os::raw::c_long,
}
#[test]
fn bindgen_test_layout_pthread_rwlock_t() {
    const UNINIT: ::std::mem::MaybeUninit<pthread_rwlock_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<pthread_rwlock_t>(),
        56usize,
        concat!("Size of: ", stringify!(pthread_rwlock_t))
    );
    assert_eq!(
        ::std::mem::align_of::<pthread_rwlock_t>(),
        8usize,
        concat!("Alignment of ", stringify!(pthread_rwlock_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__data) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_rwlock_t),
            "::",
            stringify!(__data)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__size) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_rwlock_t),
            "::",
            stringify!(__size)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__align) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_rwlock_t),
            "::",
            stringify!(__align)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_rwlockattr_t {
    pub __size: [::std::os::raw::c_char; 8usize],
    pub __align: ::std::os::raw::c_long,
}
#[test]
fn bindgen_test_layout_pthread_rwlockattr_t() {
    const UNINIT: ::std::mem::MaybeUninit<pthread_rwlockattr_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<pthread_rwlockattr_t>(),
        8usize,
        concat!("Size of: ", stringify!(pthread_rwlockattr_t))
    );
    assert_eq!(
        ::std::mem::align_of::<pthread_rwlockattr_t>(),
        8usize,
        concat!("Alignment of ", stringify!(pthread_rwlockattr_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__size) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_rwlockattr_t),
            "::",
            stringify!(__size)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__align) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_rwlockattr_t),
            "::",
            stringify!(__align)
        )
    );
}
pub type pthread_spinlock_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_barrier_t {
    pub __size: [::std::os::raw::c_char; 32usize],
    pub __align: ::std::os::raw::c_long,
}
#[test]
fn bindgen_test_layout_pthread_barrier_t() {
    const UNINIT: ::std::mem::MaybeUninit<pthread_barrier_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<pthread_barrier_t>(),
        32usize,
        concat!("Size of: ", stringify!(pthread_barrier_t))
    );
    assert_eq!(
        ::std::mem::align_of::<pthread_barrier_t>(),
        8usize,
        concat!("Alignment of ", stringify!(pthread_barrier_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__size) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_barrier_t),
            "::",
            stringify!(__size)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__align) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_barrier_t),
            "::",
            stringify!(__align)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_barrierattr_t {
    pub __size: [::std::os::raw::c_char; 4usize],
    pub __align: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_pthread_barrierattr_t() {
    const UNINIT: ::std::mem::MaybeUninit<pthread_barrierattr_t> =
        ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<pthread_barrierattr_t>(),
        4usize,
        concat!("Size of: ", stringify!(pthread_barrierattr_t))
    );
    assert_eq!(
        ::std::mem::align_of::<pthread_barrierattr_t>(),
        4usize,
        concat!("Alignment of ", stringify!(pthread_barrierattr_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__size) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_barrierattr_t),
            "::",
            stringify!(__size)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__align) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(pthread_barrierattr_t),
            "::",
            stringify!(__align)
        )
    );
}
extern "C" {
    pub fn random() -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn srandom(__seed: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn initstate(
        __seed: ::std::os::raw::c_uint,
        __statebuf: *mut ::std::os::raw::c_char,
        __statelen: usize,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn setstate(__statebuf: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct random_data {
    pub fptr: *mut i32,
    pub rptr: *mut i32,
    pub state: *mut i32,
    pub rand_type: ::std::os::raw::c_int,
    pub rand_deg: ::std::os::raw::c_int,
    pub rand_sep: ::std::os::raw::c_int,
    pub end_ptr: *mut i32,
}
#[test]
fn bindgen_test_layout_random_data() {
    const UNINIT: ::std::mem::MaybeUninit<random_data> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<random_data>(),
        48usize,
        concat!("Size of: ", stringify!(random_data))
    );
    assert_eq!(
        ::std::mem::align_of::<random_data>(),
        8usize,
        concat!("Alignment of ", stringify!(random_data))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).fptr) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(random_data),
            "::",
            stringify!(fptr)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).rptr) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(random_data),
            "::",
            stringify!(rptr)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).state) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(random_data),
            "::",
            stringify!(state)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).rand_type) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(random_data),
            "::",
            stringify!(rand_type)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).rand_deg) as usize - ptr as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(random_data),
            "::",
            stringify!(rand_deg)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).rand_sep) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(random_data),
            "::",
            stringify!(rand_sep)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).end_ptr) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(random_data),
            "::",
            stringify!(end_ptr)
        )
    );
}
extern "C" {
    pub fn random_r(__buf: *mut random_data, __result: *mut i32) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn srandom_r(
        __seed: ::std::os::raw::c_uint,
        __buf: *mut random_data,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn initstate_r(
        __seed: ::std::os::raw::c_uint,
        __statebuf: *mut ::std::os::raw::c_char,
        __statelen: usize,
        __buf: *mut random_data,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn setstate_r(
        __statebuf: *mut ::std::os::raw::c_char,
        __buf: *mut random_data,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rand() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn srand(__seed: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn rand_r(__seed: *mut ::std::os::raw::c_uint) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn drand48() -> f64;
}
extern "C" {
    pub fn erand48(__xsubi: *mut ::std::os::raw::c_ushort) -> f64;
}
extern "C" {
    pub fn lrand48() -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn nrand48(__xsubi: *mut ::std::os::raw::c_ushort) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn mrand48() -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn jrand48(__xsubi: *mut ::std::os::raw::c_ushort) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn srand48(__seedval: ::std::os::raw::c_long);
}
extern "C" {
    pub fn seed48(__seed16v: *mut ::std::os::raw::c_ushort) -> *mut ::std::os::raw::c_ushort;
}
extern "C" {
    pub fn lcong48(__param: *mut ::std::os::raw::c_ushort);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct drand48_data {
    pub __x: [::std::os::raw::c_ushort; 3usize],
    pub __old_x: [::std::os::raw::c_ushort; 3usize],
    pub __c: ::std::os::raw::c_ushort,
    pub __init: ::std::os::raw::c_ushort,
    pub __a: ::std::os::raw::c_ulonglong,
}
#[test]
fn bindgen_test_layout_drand48_data() {
    const UNINIT: ::std::mem::MaybeUninit<drand48_data> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<drand48_data>(),
        24usize,
        concat!("Size of: ", stringify!(drand48_data))
    );
    assert_eq!(
        ::std::mem::align_of::<drand48_data>(),
        8usize,
        concat!("Alignment of ", stringify!(drand48_data))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(drand48_data),
            "::",
            stringify!(__x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__old_x) as usize - ptr as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(drand48_data),
            "::",
            stringify!(__old_x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__c) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(drand48_data),
            "::",
            stringify!(__c)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__init) as usize - ptr as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(drand48_data),
            "::",
            stringify!(__init)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__a) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(drand48_data),
            "::",
            stringify!(__a)
        )
    );
}
extern "C" {
    pub fn drand48_r(__buffer: *mut drand48_data, __result: *mut f64) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn erand48_r(
        __xsubi: *mut ::std::os::raw::c_ushort,
        __buffer: *mut drand48_data,
        __result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn lrand48_r(
        __buffer: *mut drand48_data,
        __result: *mut ::std::os::raw::c_long,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn nrand48_r(
        __xsubi: *mut ::std::os::raw::c_ushort,
        __buffer: *mut drand48_data,
        __result: *mut ::std::os::raw::c_long,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn mrand48_r(
        __buffer: *mut drand48_data,
        __result: *mut ::std::os::raw::c_long,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn jrand48_r(
        __xsubi: *mut ::std::os::raw::c_ushort,
        __buffer: *mut drand48_data,
        __result: *mut ::std::os::raw::c_long,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn srand48_r(
        __seedval: ::std::os::raw::c_long,
        __buffer: *mut drand48_data,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn seed48_r(
        __seed16v: *mut ::std::os::raw::c_ushort,
        __buffer: *mut drand48_data,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn lcong48_r(
        __param: *mut ::std::os::raw::c_ushort,
        __buffer: *mut drand48_data,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn arc4random() -> __uint32_t;
}
extern "C" {
    pub fn arc4random_buf(__buf: *mut ::std::os::raw::c_void, __size: usize);
}
extern "C" {
    pub fn arc4random_uniform(__upper_bound: __uint32_t) -> __uint32_t;
}
extern "C" {
    pub fn malloc(__size: ::std::os::raw::c_ulong) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn calloc(
        __nmemb: ::std::os::raw::c_ulong,
        __size: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn realloc(
        __ptr: *mut ::std::os::raw::c_void,
        __size: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn free(__ptr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn reallocarray(
        __ptr: *mut ::std::os::raw::c_void,
        __nmemb: usize,
        __size: usize,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn alloca(__size: ::std::os::raw::c_ulong) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn valloc(__size: usize) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn posix_memalign(
        __memptr: *mut *mut ::std::os::raw::c_void,
        __alignment: usize,
        __size: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn aligned_alloc(
        __alignment: ::std::os::raw::c_ulong,
        __size: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn abort() -> !;
}
extern "C" {
    pub fn atexit(__func: ::std::option::Option<unsafe extern "C" fn()>) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn at_quick_exit(
        __func: ::std::option::Option<unsafe extern "C" fn()>,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn on_exit(
        __func: ::std::option::Option<
            unsafe extern "C" fn(
                __status: ::std::os::raw::c_int,
                __arg: *mut ::std::os::raw::c_void,
            ),
        >,
        __arg: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn exit(__status: ::std::os::raw::c_int) -> !;
}
extern "C" {
    pub fn quick_exit(__status: ::std::os::raw::c_int) -> !;
}
extern "C" {
    pub fn _Exit(__status: ::std::os::raw::c_int) -> !;
}
extern "C" {
    pub fn getenv(__name: *const ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn putenv(__string: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn setenv(
        __name: *const ::std::os::raw::c_char,
        __value: *const ::std::os::raw::c_char,
        __replace: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn unsetenv(__name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn clearenv() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn mktemp(__template: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn mkstemp(__template: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn mkstemps(
        __template: *mut ::std::os::raw::c_char,
        __suffixlen: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn mkdtemp(__template: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn system(__command: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn realpath(
        __name: *const ::std::os::raw::c_char,
        __resolved: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
pub type __compar_fn_t = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *const ::std::os::raw::c_void,
        arg2: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int,
>;
extern "C" {
    pub fn bsearch(
        __key: *const ::std::os::raw::c_void,
        __base: *const ::std::os::raw::c_void,
        __nmemb: usize,
        __size: usize,
        __compar: __compar_fn_t,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn qsort(
        __base: *mut ::std::os::raw::c_void,
        __nmemb: usize,
        __size: usize,
        __compar: __compar_fn_t,
    );
}
extern "C" {
    pub fn abs(__x: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn labs(__x: ::std::os::raw::c_long) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn llabs(__x: ::std::os::raw::c_longlong) -> ::std::os::raw::c_longlong;
}
extern "C" {
    pub fn div(__numer: ::std::os::raw::c_int, __denom: ::std::os::raw::c_int) -> div_t;
}
extern "C" {
    pub fn ldiv(__numer: ::std::os::raw::c_long, __denom: ::std::os::raw::c_long) -> ldiv_t;
}
extern "C" {
    pub fn lldiv(
        __numer: ::std::os::raw::c_longlong,
        __denom: ::std::os::raw::c_longlong,
    ) -> lldiv_t;
}
extern "C" {
    pub fn ecvt(
        __value: f64,
        __ndigit: ::std::os::raw::c_int,
        __decpt: *mut ::std::os::raw::c_int,
        __sign: *mut ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn fcvt(
        __value: f64,
        __ndigit: ::std::os::raw::c_int,
        __decpt: *mut ::std::os::raw::c_int,
        __sign: *mut ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn gcvt(
        __value: f64,
        __ndigit: ::std::os::raw::c_int,
        __buf: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn qecvt(
        __value: u128,
        __ndigit: ::std::os::raw::c_int,
        __decpt: *mut ::std::os::raw::c_int,
        __sign: *mut ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn qfcvt(
        __value: u128,
        __ndigit: ::std::os::raw::c_int,
        __decpt: *mut ::std::os::raw::c_int,
        __sign: *mut ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn qgcvt(
        __value: u128,
        __ndigit: ::std::os::raw::c_int,
        __buf: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn ecvt_r(
        __value: f64,
        __ndigit: ::std::os::raw::c_int,
        __decpt: *mut ::std::os::raw::c_int,
        __sign: *mut ::std::os::raw::c_int,
        __buf: *mut ::std::os::raw::c_char,
        __len: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn fcvt_r(
        __value: f64,
        __ndigit: ::std::os::raw::c_int,
        __decpt: *mut ::std::os::raw::c_int,
        __sign: *mut ::std::os::raw::c_int,
        __buf: *mut ::std::os::raw::c_char,
        __len: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn qecvt_r(
        __value: u128,
        __ndigit: ::std::os::raw::c_int,
        __decpt: *mut ::std::os::raw::c_int,
        __sign: *mut ::std::os::raw::c_int,
        __buf: *mut ::std::os::raw::c_char,
        __len: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn qfcvt_r(
        __value: u128,
        __ndigit: ::std::os::raw::c_int,
        __decpt: *mut ::std::os::raw::c_int,
        __sign: *mut ::std::os::raw::c_int,
        __buf: *mut ::std::os::raw::c_char,
        __len: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn mblen(__s: *const ::std::os::raw::c_char, __n: usize) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn mbtowc(
        __pwc: *mut wchar_t,
        __s: *const ::std::os::raw::c_char,
        __n: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn wctomb(__s: *mut ::std::os::raw::c_char, __wchar: wchar_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn mbstowcs(__pwcs: *mut wchar_t, __s: *const ::std::os::raw::c_char, __n: usize) -> usize;
}
extern "C" {
    pub fn wcstombs(__s: *mut ::std::os::raw::c_char, __pwcs: *const wchar_t, __n: usize) -> usize;
}
extern "C" {
    pub fn rpmatch(__response: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn getsubopt(
        __optionp: *mut *mut ::std::os::raw::c_char,
        __tokens: *const *mut ::std::os::raw::c_char,
        __valuep: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn getloadavg(__loadavg: *mut f64, __nelem: ::std::os::raw::c_int)
        -> ::std::os::raw::c_int;
}
pub type vec16 = [i16; 8usize];
pub type vec32 = [i32; 4usize];
pub type vecf32 = [f32; 4usize];
pub type vec8 = [i8; 16usize];
pub type uvec16 = [u16; 8usize];
pub type uvec32 = [u32; 4usize];
pub type uvec8 = [u8; 16usize];
pub type lvec16 = [i16; 16usize];
pub type lvec32 = [i32; 8usize];
pub type lvec8 = [i8; 32usize];
pub type ulvec16 = [u16; 16usize];
pub type ulvec32 = [u32; 8usize];
pub type ulvec8 = [u8; 32usize];
extern "C" {
    pub fn I444ToARGBRow_NEON(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToRGB24Row_NEON(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_NEON(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444AlphaToARGBRow_NEON(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        src_a: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_NEON(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        src_a: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_NEON(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgba: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_NEON(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB565Row_NEON(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB1555Row_NEON(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb1555: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB4444Row_NEON(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb4444: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_NEON(
        src_y: *const u8,
        src_uv: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB565Row_NEON(
        src_y: *const u8,
        src_uv: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_NEON(
        src_y: *const u8,
        src_vu: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB24Row_NEON(
        src_y: *const u8,
        src_uv: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToRGB24Row_NEON(
        src_y: *const u8,
        src_vu: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToYUV24Row_NEON(
        src_y: *const u8,
        src_vu: *const u8,
        dst_yuv24: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToARGBRow_NEON(
        src_yuy2: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToARGBRow_NEON(
        src_uyvy: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToARGBRow_RVV(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444AlphaToARGBRow_RVV(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        src_a: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToRGB24Row_RVV(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_RVV(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_RVV(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        src_a: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_RVV(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgba: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_RVV(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToARGBRow_MSA(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToARGBRow_LSX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_MSA(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_LSX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_LASX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_MSA(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_LSX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_LASX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_MSA(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        src_a: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_LSX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        src_a: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_LASX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        src_a: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_MSA(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_LSX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_LASX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB565Row_MSA(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB565Row_LSX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB565Row_LASX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB4444Row_MSA(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb4444: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB4444Row_LSX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb4444: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB4444Row_LASX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb4444: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB1555Row_MSA(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb1555: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB1555Row_LSX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb1555: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB1555Row_LASX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb1555: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_MSA(
        src_y: *const u8,
        src_uv: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB565Row_MSA(
        src_y: *const u8,
        src_uv: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_MSA(
        src_y: *const u8,
        src_vu: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToARGBRow_MSA(
        src_yuy2: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToARGBRow_MSA(
        src_uyvy: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_LSX(
        src_y: *const u8,
        src_uv: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_LASX(
        src_y: *const u8,
        src_uv: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB565Row_LSX(
        src_y: *const u8,
        src_uv: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB565Row_LASX(
        src_y: *const u8,
        src_uv: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_LSX(
        src_y: *const u8,
        src_vu: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_LASX(
        src_y: *const u8,
        src_vu: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToARGBRow_LSX(
        src_yuy2: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToARGBRow_LSX(
        src_uyvy: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_RVV(
        src_y: *const u8,
        src_uv: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_RVV(
        src_y: *const u8,
        src_vu: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB24Row_RVV(
        src_y: *const u8,
        src_uv: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToRGB24Row_RVV(
        src_y: *const u8,
        src_vu: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToYRow_AVX2(src_argb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYRow_Any_AVX2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_AVX2(src_abgr: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_Any_AVX2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYRow_SSSE3(src_argb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_SSSE3(src_argb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_AVX2(src_argb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_Any_AVX2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_SSSE3(src_abgr: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYJRow_SSSE3(src_abgr: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYJRow_AVX2(src_abgr: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYJRow_Any_AVX2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYJRow_AVX2(src_rgba: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYJRow_Any_AVX2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYJRow_SSSE3(src_rgba: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn BGRAToYRow_SSSE3(src_bgra: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYRow_SSSE3(src_rgba: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYRow_SSSE3(src_rgb24: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYJRow_SSSE3(src_rgb24: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYRow_SSSE3(src_raw: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYJRow_SSSE3(src_raw: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYJRow_AVX2(src_rgb24: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYJRow_AVX2(src_raw: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYRow_NEON(src_argb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_NEON(src_argb: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYJRow_NEON(src_abgr: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYJRow_NEON(src_rgba: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYRow_RVV(src_argb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_RVV(src_argb: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYJRow_RVV(src_rgba: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYJRow_RVV(src_rgba: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYRow_MSA(src_argb0: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_MSA(src_argb0: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYRow_LSX(src_argb0: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYRow_LASX(src_argb0: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_LSX(src_argb0: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYJRow_LSX(src_abgr: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYJRow_LSX(src_rgba: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_LASX(src_argb0: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYJRow_LASX(src_abgr: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYJRow_LASX(src_rgba: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToUV444Row_NEON(
        src_argb: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVRow_NEON(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUV444Row_MSA(
        src_argb: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVRow_MSA(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVRow_LSX(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVRow_LASX(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUV444Row_LSX(
        src_argb: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUV444Row_LASX(
        src_argb: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVJRow_NEON(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVJRow_NEON(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_uj: *mut u8,
        dst_vj: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToUVRow_NEON(
        src_bgra: *const u8,
        src_stride_bgra: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVRow_NEON(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBAToUVRow_NEON(
        src_rgba: *const u8,
        src_stride_rgba: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToUVRow_NEON(
        src_rgb24: *const u8,
        src_stride_rgb24: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToUVRow_NEON(
        src_raw: *const u8,
        src_stride_raw: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToUVJRow_NEON(
        src_rgb24: *const u8,
        src_stride_rgb24: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToUVJRow_NEON(
        src_raw: *const u8,
        src_stride_raw: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToUVRow_NEON(
        src_rgb565: *const u8,
        src_stride_rgb565: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToUVRow_NEON(
        src_argb1555: *const u8,
        src_stride_argb1555: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToUVRow_NEON(
        src_argb4444: *const u8,
        src_stride_argb4444: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVJRow_MSA(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVJRow_MSA(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToUVRow_MSA(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVRow_MSA(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBAToUVRow_MSA(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToUVRow_MSA(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToUVRow_MSA(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToUVRow_MSA(
        src_rgb565: *const u8,
        src_stride_rgb565: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToUVRow_MSA(
        src_argb1555: *const u8,
        src_stride_argb1555: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToUVRow_LSX(
        src_bgra: *const u8,
        src_stride_bgra: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVRow_LSX(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBAToUVRow_LSX(
        src_rgba: *const u8,
        src_stride_rgba: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVJRow_LSX(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVJRow_LASX(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToUVRow_LSX(
        src_argb1555: *const u8,
        src_stride_argb1555: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToUVRow_LASX(
        src_argb1555: *const u8,
        src_stride_argb1555: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToUVRow_LSX(
        src_rgb565: *const u8,
        src_stride_rgb565: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToUVRow_LASX(
        src_rgb565: *const u8,
        src_stride_rgb565: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToUVRow_LSX(
        src_rgb24: *const u8,
        src_stride_rgb24: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToUVRow_LASX(
        src_rgb24: *const u8,
        src_stride_rgb24: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToUVRow_LSX(
        src_raw: *const u8,
        src_stride_raw: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToUVRow_LASX(
        src_raw: *const u8,
        src_stride_raw: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToYRow_NEON(src_bgra: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_NEON(src_abgr: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYRow_NEON(src_rgba: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYRow_NEON(src_rgb24: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYJRow_NEON(src_rgb24: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYRow_NEON(src_raw: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYJRow_NEON(src_raw: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB565ToYRow_NEON(src_rgb565: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGB1555ToYRow_NEON(
        src_argb1555: *const u8,
        dst_y: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToYRow_NEON(
        src_argb4444: *const u8,
        dst_y: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToYRow_RVV(src_bgra: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_RVV(src_abgr: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYRow_RVV(src_rgba: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYRow_RVV(src_rgb24: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYJRow_RVV(src_rgb24: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYRow_RVV(src_raw: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYJRow_RVV(src_raw: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn BGRAToYRow_MSA(src_argb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_MSA(src_argb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYRow_MSA(src_argb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYRow_MSA(src_argb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYRow_MSA(src_argb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB565ToYRow_MSA(src_rgb565: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGB1555ToYRow_MSA(
        src_argb1555: *const u8,
        dst_y: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToYRow_LSX(src_bgra: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_LSX(src_abgr: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYRow_LSX(src_rgba: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGB1555ToYRow_LSX(
        src_argb1555: *const u8,
        dst_y: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToYJRow_LSX(src_rgb24: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_LASX(src_abgr: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGB1555ToYRow_LASX(
        src_argb1555: *const u8,
        dst_y: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToYRow_LSX(src_rgb565: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB565ToYRow_LASX(src_rgb565: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYRow_LSX(src_rgb24: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYRow_LASX(src_rgb24: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYRow_LSX(src_raw: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYRow_LASX(src_raw: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYRow_LASX(src_rgba: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn BGRAToYRow_LASX(src_bgra: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYJRow_LASX(src_rgb24: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYJRow_LSX(src_raw: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYJRow_LASX(src_raw: *const u8, dst_yj: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYRow_C(src_rgb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_C(src_rgb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYJRow_C(src_rgb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYJRow_C(src_rgb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn BGRAToYRow_C(src_rgb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_C(src_rgb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYRow_C(src_rgb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYRow_C(src_rgb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYJRow_C(src_rgb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYRow_C(src_rgb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYJRow_C(src_rgb: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB565ToYRow_C(src_rgb565: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGB1555ToYRow_C(src_argb1555: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGB4444ToYRow_C(src_argb4444: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYRow_Any_SSSE3(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToYJRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBAToYJRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToYRow_Any_SSSE3(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_Any_SSSE3(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYRow_Any_SSSE3(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToYJRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToYRow_Any_SSSE3(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYJRow_Any_SSSE3(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYJRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToYJRow_Any_AVX2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYJRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYJRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn BGRAToYRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYJRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToYRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYJRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB565ToYRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToYRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToYRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToYRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB565ToYRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGB1555ToYRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToYRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB565ToYRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYJRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYJRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYJRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYJRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGB1555ToYRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToYRow_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToYRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYJRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToYRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToYJRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToYRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToYJRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn BGRAToYRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToYJRow_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToYJRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGB1555ToYRow_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVRow_AVX2(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVRow_AVX2(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVJRow_AVX2(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVJRow_AVX2(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVRow_SSSE3(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVJRow_SSSE3(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVJRow_SSSE3(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToUVRow_SSSE3(
        src_bgra: *const u8,
        src_stride_bgra: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVRow_SSSE3(
        src_abgr: *const u8,
        src_stride_abgr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBAToUVRow_SSSE3(
        src_rgba: *const u8,
        src_stride_rgba: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVRow_Any_AVX2(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVRow_Any_AVX2(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVJRow_Any_AVX2(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVJRow_Any_AVX2(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVRow_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVJRow_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVJRow_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToUVRow_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVRow_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBAToUVRow_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUV444Row_Any_NEON(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUV444Row_Any_MSA(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVRow_Any_MSA(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVRow_Any_LSX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVRow_Any_LASX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUV444Row_Any_LSX(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUV444Row_Any_LASX(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVJRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVJRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToUVRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBAToUVRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToUVRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToUVRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToUVJRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToUVJRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToUVRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToUVRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToUVRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVJRow_Any_MSA(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToUVRow_Any_MSA(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVRow_Any_MSA(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBAToUVRow_Any_MSA(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToUVRow_Any_MSA(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToUVRow_Any_MSA(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToUVRow_Any_MSA(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToUVRow_Any_MSA(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVRow_Any_LSX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToUVRow_Any_LSX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBAToUVRow_Any_LSX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVJRow_Any_LSX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVJRow_Any_LASX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToUVRow_Any_LSX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToUVRow_Any_LASX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToUVRow_Any_LSX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToUVRow_Any_LASX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToUVRow_Any_LSX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToUVRow_Any_LASX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToUVRow_Any_LSX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToUVRow_Any_LASX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVRow_C(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUVJRow_C(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVJRow_C(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BGRAToUVRow_C(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToUVRow_C(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBAToUVRow_C(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBAToUVJRow_C(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToUVRow_C(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToUVRow_C(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToUVJRow_C(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToUVJRow_C(
        src_rgb: *const u8,
        src_stride_rgb: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToUVRow_C(
        src_rgb565: *const u8,
        src_stride_rgb565: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToUVRow_C(
        src_argb1555: *const u8,
        src_stride_argb1555: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToUVRow_C(
        src_argb4444: *const u8,
        src_stride_argb4444: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUV444Row_SSSE3(
        src_argb: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUV444Row_Any_SSSE3(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToUV444Row_C(
        src_argb: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MirrorRow_AVX2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorRow_SSSE3(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorRow_NEON(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorRow_MSA(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorRow_LSX(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorRow_LASX(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorRow_C(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorRow_Any_AVX2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorRow_Any_SSSE3(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorRow_Any_SSE2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorUVRow_AVX2(src_uv: *const u8, dst_uv: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorUVRow_SSSE3(src_uv: *const u8, dst_uv: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorUVRow_NEON(src_uv: *const u8, dst_uv: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorUVRow_MSA(src_uv: *const u8, dst_uv: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorUVRow_LSX(src_uv: *const u8, dst_uv: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorUVRow_LASX(src_uv: *const u8, dst_uv: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorUVRow_C(src_uv: *const u8, dst_uv: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorUVRow_Any_AVX2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorUVRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MirrorUVRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorUVRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorUVRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorUVRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn MirrorSplitUVRow_SSSE3(
        src: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MirrorSplitUVRow_NEON(
        src_uv: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MirrorSplitUVRow_MSA(
        src_uv: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MirrorSplitUVRow_LSX(
        src_uv: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MirrorSplitUVRow_C(
        src_uv: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MirrorRow_16_C(src: *const u16, dst: *mut u16, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBMirrorRow_AVX2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBMirrorRow_SSE2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBMirrorRow_NEON(src_argb: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBMirrorRow_MSA(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBMirrorRow_LSX(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBMirrorRow_LASX(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBMirrorRow_C(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBMirrorRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMirrorRow_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMirrorRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMirrorRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMirrorRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMirrorRow_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24MirrorRow_SSSE3(
        src_rgb24: *const u8,
        dst_rgb24: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24MirrorRow_NEON(
        src_rgb24: *const u8,
        dst_rgb24: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24MirrorRow_C(src_rgb24: *const u8, dst_rgb24: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24MirrorRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24MirrorRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_C(
        src_uv: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_SSE2(
        src_uv: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_AVX2(
        src_uv: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_NEON(
        src_uv: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_MSA(
        src_uv: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_LSX(
        src_uv: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_RVV(
        src_uv: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_Any_SSE2(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_Any_AVX2(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_Any_NEON(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_Any_MSA(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_Any_LSX(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_C(
        src: *const u8,
        src_tile_stride: isize,
        dst: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_NEON(
        src: *const u8,
        src_tile_stride: isize,
        dst: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_Any_NEON(
        src: *const u8,
        src_tile_stride: isize,
        dst: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_SSE2(
        src: *const u8,
        src_tile_stride: isize,
        dst: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_Any_SSE2(
        src: *const u8,
        src_tile_stride: isize,
        dst: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_AVX(
        src: *const u8,
        src_tile_stride: isize,
        dst: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_Any_AVX(
        src: *const u8,
        src_tile_stride: isize,
        dst: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_16_C(
        src: *const u16,
        src_tile_stride: isize,
        dst: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_16_NEON(
        src: *const u16,
        src_tile_stride: isize,
        dst: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_16_Any_NEON(
        src: *const u16,
        src_tile_stride: isize,
        dst: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_16_SSE2(
        src: *const u16,
        src_tile_stride: isize,
        dst: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_16_Any_SSE2(
        src: *const u16,
        src_tile_stride: isize,
        dst: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_16_AVX(
        src: *const u16,
        src_tile_stride: isize,
        dst: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileRow_16_Any_AVX(
        src: *const u16,
        src_tile_stride: isize,
        dst: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileSplitUVRow_C(
        src_uv: *const u8,
        src_tile_stride: isize,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileSplitUVRow_SSSE3(
        src_uv: *const u8,
        src_tile_stride: isize,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileSplitUVRow_Any_SSSE3(
        src_uv: *const u8,
        src_tile_stride: isize,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileSplitUVRow_NEON(
        src_uv: *const u8,
        src_tile_stride: isize,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileSplitUVRow_Any_NEON(
        src_uv: *const u8,
        src_tile_stride: isize,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileToYUY2_C(
        src_y: *const u8,
        src_y_tile_stride: isize,
        src_uv: *const u8,
        src_uv_tile_stride: isize,
        dst_yuy2: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileToYUY2_SSE2(
        src_y: *const u8,
        src_y_tile_stride: isize,
        src_uv: *const u8,
        src_uv_tile_stride: isize,
        dst_yuy2: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileToYUY2_Any_SSE2(
        src_y: *const u8,
        src_y_tile_stride: isize,
        src_uv: *const u8,
        src_uv_tile_stride: isize,
        dst_yuy2: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileToYUY2_NEON(
        src_y: *const u8,
        src_y_tile_stride: isize,
        src_uv: *const u8,
        src_uv_tile_stride: isize,
        dst_yuy2: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DetileToYUY2_Any_NEON(
        src_y: *const u8,
        src_y_tile_stride: isize,
        src_uv: *const u8,
        src_uv_tile_stride: isize,
        dst_yuy2: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UnpackMT2T_C(src: *const u8, dst: *mut u16, size: usize);
}
extern "C" {
    pub fn UnpackMT2T_NEON(src: *const u8, dst: *mut u16, size: usize);
}
extern "C" {
    pub fn MergeUVRow_C(
        src_u: *const u8,
        src_v: *const u8,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_SSE2(
        src_u: *const u8,
        src_v: *const u8,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_AVX2(
        src_u: *const u8,
        src_v: *const u8,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_AVX512BW(
        src_u: *const u8,
        src_v: *const u8,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_NEON(
        src_u: *const u8,
        src_v: *const u8,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_MSA(
        src_u: *const u8,
        src_v: *const u8,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_LSX(
        src_u: *const u8,
        src_v: *const u8,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_RVV(
        src_u: *const u8,
        src_v: *const u8,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_Any_SSE2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_Any_AVX2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_Any_AVX512BW(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_Any_NEON(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_Any_MSA(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_Any_LSX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfMergeUVRow_C(
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfMergeUVRow_NEON(
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfMergeUVRow_SSSE3(
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfMergeUVRow_AVX2(
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitRGBRow_C(
        src_rgb: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitRGBRow_SSSE3(
        src_rgb: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitRGBRow_NEON(
        src_rgb: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitRGBRow_RVV(
        src_rgb: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitRGBRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitRGBRow_Any_NEON(
        src_ptr: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeRGBRow_C(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeRGBRow_SSSE3(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeRGBRow_NEON(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeRGBRow_RVV(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeRGBRow_Any_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeRGBRow_Any_NEON(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGBRow_C(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        src_a: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGBRow_SSE2(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        src_a: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGBRow_AVX2(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        src_a: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGBRow_NEON(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        src_a: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGBRow_RVV(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        src_a: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGBRow_Any_SSE2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGBRow_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGBRow_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitARGBRow_C(
        src_argb: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitARGBRow_SSE2(
        src_argb: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitARGBRow_SSSE3(
        src_argb: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitARGBRow_AVX2(
        src_argb: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitARGBRow_NEON(
        src_rgba: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitARGBRow_RVV(
        src_rgba: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitARGBRow_Any_SSE2(
        src_ptr: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitARGBRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitARGBRow_Any_AVX2(
        src_ptr: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitARGBRow_Any_NEON(
        src_ptr: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXRGBRow_C(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXRGBRow_SSE2(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXRGBRow_AVX2(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXRGBRow_NEON(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXRGBRow_RVV(
        src_r: *const u8,
        src_g: *const u8,
        src_b: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXRGBRow_Any_SSE2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXRGBRow_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXRGBRow_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitXRGBRow_C(
        src_argb: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitXRGBRow_SSE2(
        src_argb: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitXRGBRow_SSSE3(
        src_argb: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitXRGBRow_AVX2(
        src_argb: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitXRGBRow_NEON(
        src_rgba: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitXRGBRow_RVV(
        src_rgba: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitXRGBRow_Any_SSE2(
        src_ptr: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitXRGBRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitXRGBRow_Any_AVX2(
        src_ptr: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitXRGBRow_Any_NEON(
        src_ptr: *const u8,
        dst_r: *mut u8,
        dst_g: *mut u8,
        dst_b: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXR30Row_C(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        dst_ar30: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeAR64Row_C(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        src_a: *const u16,
        dst_ar64: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGB16To8Row_C(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        src_a: *const u16,
        dst_argb: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXR64Row_C(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        dst_ar64: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXRGB16To8Row_C(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        dst_argb: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXR30Row_AVX2(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        dst_ar30: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeAR64Row_AVX2(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        src_a: *const u16,
        dst_ar64: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGB16To8Row_AVX2(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        src_a: *const u16,
        dst_argb: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXR64Row_AVX2(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        dst_ar64: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXRGB16To8Row_AVX2(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        dst_argb: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXR30Row_NEON(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        dst_ar30: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXR30Row_10_NEON(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        dst_ar30: *mut u8,
        arg1: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeAR64Row_NEON(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        src_a: *const u16,
        dst_ar64: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGB16To8Row_NEON(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        src_a: *const u16,
        dst_argb: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXR64Row_NEON(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        dst_ar64: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXRGB16To8Row_NEON(
        src_r: *const u16,
        src_g: *const u16,
        src_b: *const u16,
        dst_argb: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXR30Row_Any_AVX2(
        r_buf: *const u16,
        g_buf: *const u16,
        b_buf: *const u16,
        dst_ptr: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeAR64Row_Any_AVX2(
        r_buf: *const u16,
        g_buf: *const u16,
        b_buf: *const u16,
        a_buf: *const u16,
        dst_ptr: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXR64Row_Any_AVX2(
        r_buf: *const u16,
        g_buf: *const u16,
        b_buf: *const u16,
        dst_ptr: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGB16To8Row_Any_AVX2(
        r_buf: *const u16,
        g_buf: *const u16,
        b_buf: *const u16,
        a_buf: *const u16,
        dst_ptr: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXRGB16To8Row_Any_AVX2(
        r_buf: *const u16,
        g_buf: *const u16,
        b_buf: *const u16,
        dst_ptr: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXR30Row_Any_NEON(
        r_buf: *const u16,
        g_buf: *const u16,
        b_buf: *const u16,
        dst_ptr: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXR30Row_10_Any_NEON(
        r_buf: *const u16,
        g_buf: *const u16,
        b_buf: *const u16,
        dst_ptr: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeAR64Row_Any_NEON(
        r_buf: *const u16,
        g_buf: *const u16,
        b_buf: *const u16,
        a_buf: *const u16,
        dst_ptr: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeARGB16To8Row_Any_NEON(
        r_buf: *const u16,
        g_buf: *const u16,
        b_buf: *const u16,
        a_buf: *const u16,
        dst_ptr: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXR64Row_Any_NEON(
        r_buf: *const u16,
        g_buf: *const u16,
        b_buf: *const u16,
        dst_ptr: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeXRGB16To8Row_Any_NEON(
        r_buf: *const u16,
        g_buf: *const u16,
        b_buf: *const u16,
        dst_ptr: *mut u8,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_16_C(
        src_u: *const u16,
        src_v: *const u16,
        dst_uv: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_16_AVX2(
        src_u: *const u16,
        src_v: *const u16,
        dst_uv: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_16_Any_AVX2(
        src_u: *const u16,
        src_v: *const u16,
        dst_uv: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_16_NEON(
        src_u: *const u16,
        src_v: *const u16,
        dst_uv: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MergeUVRow_16_Any_NEON(
        src_u: *const u16,
        src_v: *const u16,
        dst_uv: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_16_C(
        src_uv: *const u16,
        dst_u: *mut u16,
        dst_v: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_16_AVX2(
        src_uv: *const u16,
        dst_u: *mut u16,
        dst_v: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_16_Any_AVX2(
        src_uv: *const u16,
        dst_u: *mut u16,
        dst_v: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_16_NEON(
        src_uv: *const u16,
        dst_u: *mut u16,
        dst_v: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SplitUVRow_16_Any_NEON(
        src_uv: *const u16,
        dst_u: *mut u16,
        dst_v: *mut u16,
        depth: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MultiplyRow_16_C(
        src_y: *const u16,
        dst_y: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MultiplyRow_16_AVX2(
        src_y: *const u16,
        dst_y: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MultiplyRow_16_Any_AVX2(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MultiplyRow_16_NEON(
        src_y: *const u16,
        dst_y: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MultiplyRow_16_Any_NEON(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DivideRow_16_C(
        src_y: *const u16,
        dst_y: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DivideRow_16_AVX2(
        src_y: *const u16,
        dst_y: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DivideRow_16_Any_AVX2(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DivideRow_16_NEON(
        src_y: *const u16,
        dst_y: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DivideRow_16_Any_NEON(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert8To16Row_C(
        src_y: *const u8,
        dst_y: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert8To16Row_SSE2(
        src_y: *const u8,
        dst_y: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert8To16Row_AVX2(
        src_y: *const u8,
        dst_y: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert8To16Row_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert8To16Row_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert16To8Row_C(
        src_y: *const u16,
        dst_y: *mut u8,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert16To8Row_SSSE3(
        src_y: *const u16,
        dst_y: *mut u8,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert16To8Row_AVX2(
        src_y: *const u16,
        dst_y: *mut u8,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert16To8Row_Any_SSSE3(
        src_ptr: *const u16,
        dst_ptr: *mut u8,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert16To8Row_Any_AVX2(
        src_ptr: *const u16,
        dst_ptr: *mut u8,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert16To8Row_NEON(
        src_y: *const u16,
        dst_y: *mut u8,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Convert16To8Row_Any_NEON(
        src_ptr: *const u16,
        dst_ptr: *mut u8,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CopyRow_SSE2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CopyRow_AVX(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CopyRow_ERMS(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CopyRow_NEON(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CopyRow_MIPS(src: *const u8, dst: *mut u8, count: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CopyRow_RVV(src: *const u8, dst: *mut u8, count: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CopyRow_C(src: *const u8, dst: *mut u8, count: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CopyRow_Any_SSE2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CopyRow_Any_AVX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CopyRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CopyRow_16_C(src: *const u16, dst: *mut u16, count: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBCopyAlphaRow_C(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBCopyAlphaRow_SSE2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBCopyAlphaRow_AVX2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBCopyAlphaRow_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBCopyAlphaRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBExtractAlphaRow_C(src_argb: *const u8, dst_a: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBExtractAlphaRow_SSE2(
        src_argb: *const u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBExtractAlphaRow_AVX2(
        src_argb: *const u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBExtractAlphaRow_NEON(
        src_argb: *const u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBExtractAlphaRow_MSA(
        src_argb: *const u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBExtractAlphaRow_LSX(
        src_argb: *const u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBExtractAlphaRow_RVV(
        src_argb: *const u8,
        dst_a: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBExtractAlphaRow_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBExtractAlphaRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBExtractAlphaRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBExtractAlphaRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBExtractAlphaRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBCopyYToAlphaRow_C(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBCopyYToAlphaRow_SSE2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBCopyYToAlphaRow_AVX2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBCopyYToAlphaRow_RVV(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBCopyYToAlphaRow_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBCopyYToAlphaRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SetRow_C(dst: *mut u8, v8: u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SetRow_MSA(dst: *mut u8, v8: u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SetRow_X86(dst: *mut u8, v8: u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SetRow_ERMS(dst: *mut u8, v8: u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SetRow_NEON(dst: *mut u8, v8: u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SetRow_LSX(dst: *mut u8, v8: u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SetRow_Any_X86(dst_ptr: *mut u8, v32: u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SetRow_Any_NEON(dst_ptr: *mut u8, v32: u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SetRow_Any_LSX(dst_ptr: *mut u8, v32: u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSetRow_C(dst_argb: *mut u8, v32: u32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSetRow_X86(dst_argb: *mut u8, v32: u32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSetRow_NEON(dst: *mut u8, v32: u32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSetRow_Any_NEON(dst_ptr: *mut u8, v32: u32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSetRow_MSA(dst_argb: *mut u8, v32: u32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSetRow_Any_MSA(dst_ptr: *mut u8, v32: u32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSetRow_LSX(dst_argb: *mut u8, v32: u32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSetRow_Any_LSX(dst_ptr: *mut u8, v32: u32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBShuffleRow_C(
        src_argb: *const u8,
        dst_argb: *mut u8,
        shuffler: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShuffleRow_SSSE3(
        src_argb: *const u8,
        dst_argb: *mut u8,
        shuffler: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShuffleRow_AVX2(
        src_argb: *const u8,
        dst_argb: *mut u8,
        shuffler: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShuffleRow_NEON(
        src_argb: *const u8,
        dst_argb: *mut u8,
        shuffler: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShuffleRow_MSA(
        src_argb: *const u8,
        dst_argb: *mut u8,
        shuffler: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShuffleRow_LSX(
        src_argb: *const u8,
        dst_argb: *mut u8,
        shuffler: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShuffleRow_LASX(
        src_argb: *const u8,
        dst_argb: *mut u8,
        shuffler: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShuffleRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShuffleRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShuffleRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShuffleRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShuffleRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShuffleRow_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToARGBRow_SSSE3(
        src_rgb24: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToARGBRow_SSSE3(src_raw: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToRGBARow_SSSE3(src_raw: *const u8, dst_rgba: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToRGB24Row_SSSE3(
        src_raw: *const u8,
        dst_rgb24: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToARGBRow_SSE2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGB1555ToARGBRow_SSE2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGB4444ToARGBRow_SSE2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB565ToARGBRow_AVX2(
        src_rgb565: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToARGBRow_AVX2(
        src_argb1555: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToARGBRow_AVX2(
        src_argb4444: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToARGBRow_NEON(
        src_rgb24: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToARGBRow_MSA(
        src_rgb24: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToARGBRow_LSX(
        src_rgb24: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToARGBRow_LASX(
        src_rgb24: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToARGBRow_RVV(
        src_rgb24: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToARGBRow_NEON(src_raw: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToRGBARow_NEON(src_raw: *const u8, dst_rgba: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToARGBRow_MSA(src_raw: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToARGBRow_LSX(src_raw: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToARGBRow_LASX(src_raw: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToARGBRow_RVV(src_raw: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToRGBARow_RVV(src_raw: *const u8, dst_rgba: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToRGB24Row_NEON(src_raw: *const u8, dst_rgb24: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToRGB24Row_MSA(src_raw: *const u8, dst_rgb24: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToRGB24Row_LSX(src_raw: *const u8, dst_rgb24: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToRGB24Row_RVV(src_raw: *const u8, dst_rgb24: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB565ToARGBRow_NEON(
        src_rgb565: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToARGBRow_MSA(
        src_rgb565: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToARGBRow_LSX(
        src_rgb565: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToARGBRow_LASX(
        src_rgb565: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToARGBRow_NEON(
        src_argb1555: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToARGBRow_MSA(
        src_argb1555: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToARGBRow_LSX(
        src_argb1555: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToARGBRow_LASX(
        src_argb1555: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToARGBRow_NEON(
        src_argb4444: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToARGBRow_MSA(
        src_argb4444: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToARGBRow_LSX(
        src_argb4444: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToARGBRow_LASX(
        src_argb4444: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToARGBRow_C(src_rgb24: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToARGBRow_C(src_raw: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToRGBARow_C(src_raw: *const u8, dst_rgba: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToRGB24Row_C(src_raw: *const u8, dst_rgb24: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB565ToARGBRow_C(
        src_rgb565: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToARGBRow_C(
        src_argb1555: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToARGBRow_C(
        src_argb4444: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AR30ToARGBRow_C(src_ar30: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn AR30ToABGRRow_C(src_ar30: *const u8, dst_abgr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToAR30Row_C(src_argb: *const u8, dst_ar30: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn AR30ToAB30Row_C(src_ar30: *const u8, dst_ab30: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGB24ToARGBRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToARGBRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToRGBARow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToRGB24Row_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToARGBRow_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToARGBRow_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToARGBRow_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToARGBRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToARGBRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToARGBRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToARGBRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToARGBRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToARGBRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB24ToARGBRow_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToARGBRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToRGBARow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToARGBRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToARGBRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RAWToARGBRow_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToRGB24Row_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToRGB24Row_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RAWToRGB24Row_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToARGBRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToARGBRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToARGBRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGB565ToARGBRow_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToARGBRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToARGBRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToARGBRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToARGBRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB1555ToARGBRow_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToARGBRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToARGBRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGB4444ToARGBRow_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB24Row_SSSE3(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRAWRow_SSSE3(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB565Row_SSE2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToARGB1555Row_SSE2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToARGB4444Row_SSE2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToAR30Row_SSSE3(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToAR30Row_SSSE3(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRAWRow_AVX2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB24Row_AVX2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB24Row_AVX512VBMI(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB565DitherRow_C(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        dither4: u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565DitherRow_SSE2(
        src: *const u8,
        dst: *mut u8,
        dither4: u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565DitherRow_AVX2(
        src: *const u8,
        dst: *mut u8,
        dither4: u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565Row_AVX2(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB1555Row_AVX2(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB4444Row_AVX2(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToAR30Row_AVX2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToAR30Row_AVX2(src: *const u8, dst: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB24Row_NEON(
        src_argb: *const u8,
        dst_rgb24: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRAWRow_NEON(src_argb: *const u8, dst_raw: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB565Row_NEON(
        src_argb: *const u8,
        dst_rgb565: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB1555Row_NEON(
        src_argb: *const u8,
        dst_argb1555: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB4444Row_NEON(
        src_argb: *const u8,
        dst_argb4444: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565DitherRow_NEON(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        dither4: u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB24Row_MSA(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRAWRow_MSA(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB565Row_MSA(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToARGB1555Row_MSA(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB4444Row_MSA(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565DitherRow_MSA(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        dither4: u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565DitherRow_LSX(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        dither4: u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565DitherRow_LASX(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        dither4: u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB24Row_LSX(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB24Row_LASX(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRAWRow_LSX(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRAWRow_LASX(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB565Row_LSX(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB565Row_LASX(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB1555Row_LSX(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB1555Row_LASX(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB4444Row_LSX(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB4444Row_LASX(
        src_argb: *const u8,
        dst_rgb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRAWRow_RVV(src_argb: *const u8, dst_raw: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToABGRRow_RVV(src_argb: *const u8, dst_abgr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToBGRARow_RVV(src_argb: *const u8, dst_rgba: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGBARow_RVV(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB24Row_RVV(
        src_argb: *const u8,
        dst_rgb24: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToABGRRow_C(src_argb: *const u8, dst_abgr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToBGRARow_C(src_argb: *const u8, dst_bgra: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGBARow_C(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB24Row_C(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRAWRow_C(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB565Row_C(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToARGB1555Row_C(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToARGB4444Row_C(src_argb: *const u8, dst_rgb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ABGRToAR30Row_C(src_abgr: *const u8, dst_ar30: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToAR64Row_C(src_argb: *const u8, dst_ar64: *mut u16, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToAB64Row_C(src_argb: *const u8, dst_ab64: *mut u16, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn AR64ToARGBRow_C(src_ar64: *const u16, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn AB64ToARGBRow_C(src_ab64: *const u16, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn AR64ToAB64Row_C(src_ar64: *const u16, dst_ab64: *mut u16, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn RGBAToARGBRow_C(src_rgba: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn AR64ShuffleRow_C(
        src_ar64: *const u8,
        dst_ar64: *mut u8,
        shuffler: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAR64Row_SSSE3(
        src_argb: *const u8,
        dst_ar64: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAB64Row_SSSE3(
        src_argb: *const u8,
        dst_ab64: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AR64ToARGBRow_SSSE3(
        src_ar64: *const u16,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AB64ToARGBRow_SSSE3(
        src_ab64: *const u16,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAR64Row_AVX2(
        src_argb: *const u8,
        dst_ar64: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAB64Row_AVX2(
        src_argb: *const u8,
        dst_ab64: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AR64ToARGBRow_AVX2(
        src_ar64: *const u16,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AB64ToARGBRow_AVX2(
        src_ab64: *const u16,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAR64Row_NEON(
        src_argb: *const u8,
        dst_ar64: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAB64Row_NEON(
        src_argb: *const u8,
        dst_ab64: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AR64ToARGBRow_NEON(
        src_ar64: *const u16,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AB64ToARGBRow_NEON(
        src_ab64: *const u16,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAR64Row_RVV(src_argb: *const u8, dst_ar64: *mut u16, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToAB64Row_RVV(src_argb: *const u8, dst_ab64: *mut u16, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn AR64ToARGBRow_RVV(src_ar64: *const u16, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn AB64ToARGBRow_RVV(src_ab64: *const u16, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn AR64ToAB64Row_RVV(
        src_ar64: *const u16,
        dst_ab64: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBAToARGBRow_RVV(src_rgba: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToAR64Row_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAB64Row_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AR64ToARGBRow_Any_SSSE3(
        src_ptr: *const u16,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AB64ToARGBRow_Any_SSSE3(
        src_ptr: *const u16,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAR64Row_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAB64Row_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AR64ToARGBRow_Any_AVX2(
        src_ptr: *const u16,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AB64ToARGBRow_Any_AVX2(
        src_ptr: *const u16,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAR64Row_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAB64Row_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AR64ToARGBRow_Any_NEON(
        src_ptr: *const u16,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AB64ToARGBRow_Any_NEON(
        src_ptr: *const u16,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn J400ToARGBRow_SSE2(src_y: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn J400ToARGBRow_AVX2(src_y: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn J400ToARGBRow_NEON(src_y: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn J400ToARGBRow_MSA(src_y: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn J400ToARGBRow_LSX(src_y: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn J400ToARGBRow_RVV(src_y: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn J400ToARGBRow_C(src_y: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn J400ToARGBRow_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn J400ToARGBRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn J400ToARGBRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn J400ToARGBRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn J400ToARGBRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToARGBRow_C(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToRGB24Row_C(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_C(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToAR30Row_C(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210ToAR30Row_C(
        src_y: *const u16,
        src_u: *const u16,
        src_v: *const u16,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210ToARGBRow_C(
        src_y: *const u16,
        src_u: *const u16,
        src_v: *const u16,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I212ToAR30Row_C(
        src_y: *const u16,
        src_u: *const u16,
        src_v: *const u16,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I212ToARGBRow_C(
        src_y: *const u16,
        src_u: *const u16,
        src_v: *const u16,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410ToAR30Row_C(
        src_y: *const u16,
        src_u: *const u16,
        src_v: *const u16,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410ToARGBRow_C(
        src_y: *const u16,
        src_u: *const u16,
        src_v: *const u16,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210AlphaToARGBRow_C(
        src_y: *const u16,
        src_u: *const u16,
        src_v: *const u16,
        src_a: *const u16,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410AlphaToARGBRow_C(
        src_y: *const u16,
        src_u: *const u16,
        src_v: *const u16,
        src_a: *const u16,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444AlphaToARGBRow_C(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        src_a: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_C(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        src_a: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_C(
        src_y: *const u8,
        src_uv: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB565Row_C(
        src_y: *const u8,
        src_uv: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_C(
        src_y: *const u8,
        src_vu: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB24Row_C(
        src_y: *const u8,
        src_uv: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToRGB24Row_C(
        src_y: *const u8,
        src_vu: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToYUV24Row_C(
        src_y: *const u8,
        src_vu: *const u8,
        dst_yuv24: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToARGBRow_C(
        src_yuy2: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToARGBRow_C(
        src_uyvy: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToARGBRow_C(
        src_y: *const u16,
        src_uv: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToARGBRow_C(
        src_y: *const u16,
        src_uv: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToAR30Row_C(
        src_y: *const u16,
        src_uv: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToAR30Row_C(
        src_y: *const u16,
        src_uv: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_C(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_C(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB4444Row_C(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb4444: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB1555Row_C(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb1555: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB565Row_C(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_AVX512BW(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToARGBRow_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToARGBRow_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToRGB24Row_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToRGB24Row_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToAR30Row_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210ToAR30Row_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210ToARGBRow_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I212ToAR30Row_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I212ToARGBRow_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410ToAR30Row_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410ToARGBRow_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210AlphaToARGBRow_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        a_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410AlphaToARGBRow_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        a_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToAR30Row_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210ToARGBRow_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210ToAR30Row_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I212ToARGBRow_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I212ToAR30Row_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410ToAR30Row_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410ToARGBRow_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210AlphaToARGBRow_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        a_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410AlphaToARGBRow_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        a_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444AlphaToARGBRow_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444AlphaToARGBRow_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_SSSE3(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_AVX2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB24Row_SSSE3(
        src_y: *const u8,
        src_uv: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToRGB24Row_SSSE3(
        src_y: *const u8,
        src_vu: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB565Row_SSSE3(
        src_y: *const u8,
        src_uv: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB24Row_AVX2(
        src_y: *const u8,
        src_uv: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToRGB24Row_AVX2(
        src_y: *const u8,
        src_vu: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToYUV24Row_SSSE3(
        src_y: *const u8,
        src_vu: *const u8,
        dst_yuv24: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToYUV24Row_AVX2(
        src_y: *const u8,
        src_vu: *const u8,
        dst_yuv24: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB565Row_AVX2(
        src_y: *const u8,
        src_uv: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_SSSE3(
        y_buf: *const u8,
        vu_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_AVX2(
        y_buf: *const u8,
        vu_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToARGBRow_SSSE3(
        yuy2_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToARGBRow_SSSE3(
        uyvy_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToARGBRow_AVX2(
        yuy2_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToARGBRow_AVX2(
        uyvy_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToARGBRow_SSSE3(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToARGBRow_SSSE3(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToAR30Row_SSSE3(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToAR30Row_SSSE3(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToARGBRow_AVX2(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToARGBRow_AVX2(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToAR30Row_AVX2(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToAR30Row_AVX2(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_rgba: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB4444Row_SSSE3(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb4444: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB4444Row_AVX2(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb4444: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB1555Row_SSSE3(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb1555: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB1555Row_AVX2(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_argb1555: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB565Row_SSSE3(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB565Row_AVX2(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgb565: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_AVX2(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_rgb24: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_Any_AVX512BW(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToARGBRow_Any_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToRGB24Row_Any_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToARGBRow_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToRGB24Row_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_Any_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToAR30Row_Any_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210ToAR30Row_Any_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210ToARGBRow_Any_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I212ToAR30Row_Any_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I212ToARGBRow_Any_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410ToAR30Row_Any_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410ToARGBRow_Any_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210AlphaToARGBRow_Any_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        a_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410AlphaToARGBRow_Any_SSSE3(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        a_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToAR30Row_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210ToARGBRow_Any_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210ToAR30Row_Any_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I212ToARGBRow_Any_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I212ToAR30Row_Any_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410ToAR30Row_Any_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410ToARGBRow_Any_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I210AlphaToARGBRow_Any_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        a_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I410AlphaToARGBRow_Any_AVX2(
        y_buf: *const u16,
        u_buf: *const u16,
        v_buf: *const u16,
        a_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444AlphaToARGBRow_Any_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444AlphaToARGBRow_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_Any_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_Any_SSSE3(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_Any_AVX2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_Any_SSSE3(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_Any_AVX2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB24Row_Any_SSSE3(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToRGB24Row_Any_SSSE3(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB24Row_Any_AVX2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToRGB24Row_Any_AVX2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToYUV24Row_Any_SSSE3(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToYUV24Row_Any_AVX2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB565Row_Any_SSSE3(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB565Row_Any_AVX2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToARGBRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToARGBRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToARGBRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToARGBRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToARGBRow_Any_SSSE3(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToARGBRow_Any_SSSE3(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToAR30Row_Any_SSSE3(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToAR30Row_Any_SSSE3(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToARGBRow_Any_AVX2(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToARGBRow_Any_AVX2(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToAR30Row_Any_AVX2(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToAR30Row_Any_AVX2(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_Any_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB4444Row_Any_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB4444Row_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB1555Row_Any_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB1555Row_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB565Row_Any_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB565Row_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_Any_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I400ToARGBRow_C(
        src_y: *const u8,
        rgb_buf: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I400ToARGBRow_SSE2(
        y_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I400ToARGBRow_AVX2(
        y_buf: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I400ToARGBRow_NEON(
        src_y: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I400ToARGBRow_MSA(
        src_y: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I400ToARGBRow_LSX(
        src_y: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I400ToARGBRow_RVV(
        src_y: *const u8,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I400ToARGBRow_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I400ToARGBRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I400ToARGBRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I400ToARGBRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I400ToARGBRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBBlendRow_SSSE3(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBBlendRow_NEON(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBBlendRow_MSA(
        src_argb0: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBBlendRow_LSX(
        src_argb0: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBBlendRow_RVV(
        src_argb0: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBBlendRow_C(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BlendPlaneRow_SSSE3(
        src0: *const u8,
        src1: *const u8,
        alpha: *const u8,
        dst: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BlendPlaneRow_Any_SSSE3(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BlendPlaneRow_AVX2(
        src0: *const u8,
        src1: *const u8,
        alpha: *const u8,
        dst: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BlendPlaneRow_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BlendPlaneRow_RVV(
        src0: *const u8,
        src1: *const u8,
        alpha: *const u8,
        dst: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn BlendPlaneRow_C(
        src0: *const u8,
        src1: *const u8,
        alpha: *const u8,
        dst: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMultiplyRow_C(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMultiplyRow_SSE2(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMultiplyRow_Any_SSE2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMultiplyRow_AVX2(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMultiplyRow_Any_AVX2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMultiplyRow_NEON(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMultiplyRow_Any_NEON(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMultiplyRow_MSA(
        src_argb0: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMultiplyRow_Any_MSA(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMultiplyRow_LSX(
        src_argb0: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMultiplyRow_LASX(
        src_argb0: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMultiplyRow_Any_LSX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBMultiplyRow_Any_LASX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAddRow_C(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAddRow_SSE2(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAddRow_Any_SSE2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAddRow_AVX2(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAddRow_Any_AVX2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAddRow_NEON(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAddRow_Any_NEON(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAddRow_MSA(
        src_argb0: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAddRow_Any_MSA(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAddRow_LSX(
        src_argb0: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAddRow_LASX(
        src_argb0: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAddRow_Any_LSX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAddRow_Any_LASX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBSubtractRow_C(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBSubtractRow_SSE2(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBSubtractRow_Any_SSE2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBSubtractRow_AVX2(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBSubtractRow_Any_AVX2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBSubtractRow_NEON(
        src_argb: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBSubtractRow_Any_NEON(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBSubtractRow_MSA(
        src_argb0: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBSubtractRow_Any_MSA(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBSubtractRow_LSX(
        src_argb0: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBSubtractRow_LASX(
        src_argb0: *const u8,
        src_argb1: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBSubtractRow_Any_LSX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBSubtractRow_Any_LASX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB24Row_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRAWRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565Row_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB1555Row_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB4444Row_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToAR30Row_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAR30Row_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRAWRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB24Row_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB24Row_Any_AVX512VBMI(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565DitherRow_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565DitherRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565Row_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB1555Row_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB4444Row_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ABGRToAR30Row_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToAR30Row_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB24Row_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRAWRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565Row_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB1555Row_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB4444Row_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565DitherRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB24Row_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRAWRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRGB565Row_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB1555Row_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB4444Row_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565DitherRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565DitherRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565DitherRow_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        param: u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB24Row_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB24Row_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRAWRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBToRAWRow_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565Row_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToRGB565Row_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB1555Row_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB1555Row_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB4444Row_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBToARGB4444Row_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToARGBRow_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToRGB24Row_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444AlphaToARGBRow_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB4444Row_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB1555Row_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB565Row_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_Any_NEON(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_Any_NEON(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB24Row_Any_NEON(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToRGB24Row_Any_NEON(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToYUV24Row_Any_NEON(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB565Row_Any_NEON(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToARGBRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToARGBRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToARGBRow_NEON(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToARGBRow_NEON(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToAR30Row_NEON(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToAR30Row_NEON(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToARGBRow_Any_NEON(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToARGBRow_Any_NEON(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_argb: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P210ToAR30Row_Any_NEON(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn P410ToAR30Row_Any_NEON(
        y_buf: *const u16,
        uv_buf: *const u16,
        dst_ar30: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToARGBRow_Any_MSA(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I444ToARGBRow_Any_LSX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_Any_MSA(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_Any_LSX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGBRow_Any_LASX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_Any_MSA(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_Any_LSX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGBARow_Any_LASX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_Any_MSA(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_Any_LSX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422AlphaToARGBRow_Any_LASX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        a_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_Any_MSA(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_Any_LSX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB24Row_Any_LASX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB565Row_Any_MSA(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB565Row_Any_LSX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToRGB565Row_Any_LASX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB4444Row_Any_MSA(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB4444Row_Any_LSX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB4444Row_Any_LASX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB1555Row_Any_MSA(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB1555Row_Any_LSX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToARGB1555Row_Any_LASX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_Any_MSA(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB565Row_Any_MSA(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_Any_MSA(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToARGBRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToARGBRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_Any_LSX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToARGBRow_Any_LASX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB565Row_Any_LSX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV12ToRGB565Row_Any_LASX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_Any_LSX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn NV21ToARGBRow_Any_LASX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToARGBRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToARGBRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        yuvconstants: *const YuvConstants,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToYRow_AVX2(src_yuy2: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn YUY2ToUVRow_AVX2(
        src_yuy2: *const u8,
        stride_yuy2: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToNVUVRow_AVX2(
        src_yuy2: *const u8,
        stride_yuy2: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUV422Row_AVX2(
        src_yuy2: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToYRow_SSE2(src_yuy2: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn YUY2ToUVRow_SSE2(
        src_yuy2: *const u8,
        stride_yuy2: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToNVUVRow_SSE2(
        src_yuy2: *const u8,
        stride_yuy2: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUV422Row_SSE2(
        src_yuy2: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToYRow_NEON(src_yuy2: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn YUY2ToUVRow_NEON(
        src_yuy2: *const u8,
        stride_yuy2: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToNVUVRow_NEON(
        src_yuy2: *const u8,
        stride_yuy2: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUV422Row_NEON(
        src_yuy2: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToYRow_MSA(src_yuy2: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn YUY2ToYRow_LSX(src_yuy2: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn YUY2ToYRow_LASX(src_yuy2: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn YUY2ToUVRow_MSA(
        src_yuy2: *const u8,
        src_stride_yuy2: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUVRow_LSX(
        src_yuy2: *const u8,
        src_stride_yuy2: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUVRow_LASX(
        src_yuy2: *const u8,
        src_stride_yuy2: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUV422Row_MSA(
        src_yuy2: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUV422Row_LSX(
        src_yuy2: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUV422Row_LASX(
        src_yuy2: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToYRow_C(src_yuy2: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn YUY2ToUVRow_C(
        src_yuy2: *const u8,
        src_stride_yuy2: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToNVUVRow_C(
        src_yuy2: *const u8,
        src_stride_yuy2: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUV422Row_C(
        src_yuy2: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToYRow_Any_AVX2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn YUY2ToUVRow_Any_AVX2(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToNVUVRow_Any_AVX2(
        src_yuy2: *const u8,
        stride_yuy2: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUV422Row_Any_AVX2(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToYRow_Any_SSE2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn YUY2ToUVRow_Any_SSE2(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToNVUVRow_Any_SSE2(
        src_yuy2: *const u8,
        stride_yuy2: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUV422Row_Any_SSE2(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToYRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn YUY2ToUVRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToNVUVRow_Any_NEON(
        src_yuy2: *const u8,
        stride_yuy2: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUV422Row_Any_NEON(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToYRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn YUY2ToYRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn YUY2ToYRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn YUY2ToUVRow_Any_MSA(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUVRow_Any_LSX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUVRow_Any_LASX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUV422Row_Any_MSA(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUV422Row_Any_LSX(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn YUY2ToUV422Row_Any_LASX(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToYRow_AVX2(src_uyvy: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn UYVYToUVRow_AVX2(
        src_uyvy: *const u8,
        stride_uyvy: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUV422Row_AVX2(
        src_uyvy: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToYRow_SSE2(src_uyvy: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn UYVYToUVRow_SSE2(
        src_uyvy: *const u8,
        stride_uyvy: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUV422Row_SSE2(
        src_uyvy: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToYRow_NEON(src_uyvy: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn UYVYToUVRow_NEON(
        src_uyvy: *const u8,
        stride_uyvy: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUV422Row_NEON(
        src_uyvy: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToYRow_MSA(src_uyvy: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn UYVYToYRow_LSX(src_uyvy: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn UYVYToYRow_LASX(src_uyvy: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn UYVYToUVRow_MSA(
        src_uyvy: *const u8,
        src_stride_uyvy: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUVRow_LSX(
        src_uyvy: *const u8,
        src_stride_uyvy: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUVRow_LASX(
        src_uyvy: *const u8,
        src_stride_uyvy: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUV422Row_MSA(
        src_uyvy: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUV422Row_LSX(
        src_uyvy: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUV422Row_LASX(
        src_uyvy: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToYRow_C(src_uyvy: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn UYVYToUVRow_C(
        src_uyvy: *const u8,
        src_stride_uyvy: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUV422Row_C(
        src_uyvy: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToYRow_Any_AVX2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn UYVYToUVRow_Any_AVX2(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUV422Row_Any_AVX2(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToYRow_Any_SSE2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn UYVYToUVRow_Any_SSE2(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUV422Row_Any_SSE2(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToYRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn UYVYToUVRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUV422Row_Any_NEON(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToYRow_Any_MSA(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn UYVYToYRow_Any_LSX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn UYVYToYRow_Any_LASX(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn UYVYToUVRow_Any_MSA(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUVRow_Any_LSX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUVRow_Any_LASX(
        src_ptr: *const u8,
        src_stride_ptr: ::std::os::raw::c_int,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUV422Row_Any_MSA(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUV422Row_Any_LSX(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UYVYToUV422Row_Any_LASX(
        src_ptr: *const u8,
        dst_u: *mut u8,
        dst_v: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SwapUVRow_C(src_uv: *const u8, dst_vu: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SwapUVRow_NEON(src_uv: *const u8, dst_vu: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SwapUVRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SwapUVRow_SSSE3(src_uv: *const u8, dst_vu: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SwapUVRow_Any_SSSE3(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SwapUVRow_AVX2(src_uv: *const u8, dst_vu: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SwapUVRow_Any_AVX2(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn AYUVToYRow_C(src_ayuv: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn AYUVToUVRow_C(
        src_ayuv: *const u8,
        src_stride_ayuv: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AYUVToVURow_C(
        src_ayuv: *const u8,
        src_stride_ayuv: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AYUVToYRow_NEON(src_ayuv: *const u8, dst_y: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn AYUVToUVRow_NEON(
        src_ayuv: *const u8,
        src_stride_ayuv: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AYUVToVURow_NEON(
        src_ayuv: *const u8,
        src_stride_ayuv: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AYUVToYRow_Any_NEON(src_ptr: *const u8, dst_ptr: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn AYUVToUVRow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AYUVToVURow_Any_NEON(
        src_ptr: *const u8,
        src_stride: ::std::os::raw::c_int,
        dst_vu: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToYUY2Row_C(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_frame: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToUYVYRow_C(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_frame: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToYUY2Row_SSE2(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_yuy2: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToUYVYRow_SSE2(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_uyvy: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToYUY2Row_Any_SSE2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToUYVYRow_Any_SSE2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToYUY2Row_AVX2(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_yuy2: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToUYVYRow_AVX2(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_uyvy: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToYUY2Row_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToUYVYRow_Any_AVX2(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToYUY2Row_NEON(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_yuy2: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToUYVYRow_NEON(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_uyvy: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToYUY2Row_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToUYVYRow_Any_NEON(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToYUY2Row_MSA(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_yuy2: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToYUY2Row_LSX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_yuy2: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToYUY2Row_LASX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_yuy2: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToUYVYRow_MSA(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_uyvy: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToUYVYRow_LSX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_uyvy: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToUYVYRow_LASX(
        src_y: *const u8,
        src_u: *const u8,
        src_v: *const u8,
        dst_uyvy: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToYUY2Row_Any_MSA(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToYUY2Row_Any_LSX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToYUY2Row_Any_LASX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToUYVYRow_Any_MSA(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToUYVYRow_Any_LSX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn I422ToUYVYRow_Any_LASX(
        y_buf: *const u8,
        u_buf: *const u8,
        v_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAttenuateRow_C(src_argb: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBAttenuateRow_SSSE3(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAttenuateRow_AVX2(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAttenuateRow_NEON(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAttenuateRow_MSA(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAttenuateRow_LSX(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAttenuateRow_LASX(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAttenuateRow_RVV(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAttenuateRow_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAttenuateRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAttenuateRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAttenuateRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAttenuateRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBAttenuateRow_Any_LASX(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub static fixed_invtbl8: [u32; 256usize];
}
extern "C" {
    pub fn ARGBUnattenuateRow_C(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBUnattenuateRow_SSE2(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBUnattenuateRow_AVX2(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBUnattenuateRow_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBUnattenuateRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBGrayRow_C(src_argb: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBGrayRow_SSSE3(src_argb: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBGrayRow_NEON(src_argb: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBGrayRow_MSA(src_argb: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBGrayRow_LSX(src_argb: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBGrayRow_LASX(src_argb: *const u8, dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSepiaRow_C(dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSepiaRow_SSSE3(dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSepiaRow_NEON(dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSepiaRow_MSA(dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSepiaRow_LSX(dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBSepiaRow_LASX(dst_argb: *mut u8, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBColorMatrixRow_C(
        src_argb: *const u8,
        dst_argb: *mut u8,
        matrix_argb: *const i8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBColorMatrixRow_SSSE3(
        src_argb: *const u8,
        dst_argb: *mut u8,
        matrix_argb: *const i8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBColorMatrixRow_NEON(
        src_argb: *const u8,
        dst_argb: *mut u8,
        matrix_argb: *const i8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBColorMatrixRow_MSA(
        src_argb: *const u8,
        dst_argb: *mut u8,
        matrix_argb: *const i8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBColorMatrixRow_LSX(
        src_argb: *const u8,
        dst_argb: *mut u8,
        matrix_argb: *const i8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBColorTableRow_C(
        dst_argb: *mut u8,
        table_argb: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBColorTableRow_X86(
        dst_argb: *mut u8,
        table_argb: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBColorTableRow_C(
        dst_argb: *mut u8,
        table_argb: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn RGBColorTableRow_X86(
        dst_argb: *mut u8,
        table_argb: *const u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBQuantizeRow_C(
        dst_argb: *mut u8,
        scale: ::std::os::raw::c_int,
        interval_size: ::std::os::raw::c_int,
        interval_offset: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBQuantizeRow_SSE2(
        dst_argb: *mut u8,
        scale: ::std::os::raw::c_int,
        interval_size: ::std::os::raw::c_int,
        interval_offset: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBQuantizeRow_NEON(
        dst_argb: *mut u8,
        scale: ::std::os::raw::c_int,
        interval_size: ::std::os::raw::c_int,
        interval_offset: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBQuantizeRow_MSA(
        dst_argb: *mut u8,
        scale: ::std::os::raw::c_int,
        interval_size: ::std::os::raw::c_int,
        interval_offset: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBQuantizeRow_LSX(
        dst_argb: *mut u8,
        scale: ::std::os::raw::c_int,
        interval_size: ::std::os::raw::c_int,
        interval_offset: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBShadeRow_C(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
        value: u32,
    );
}
extern "C" {
    pub fn ARGBShadeRow_SSE2(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
        value: u32,
    );
}
extern "C" {
    pub fn ARGBShadeRow_NEON(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
        value: u32,
    );
}
extern "C" {
    pub fn ARGBShadeRow_MSA(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
        value: u32,
    );
}
extern "C" {
    pub fn ARGBShadeRow_LSX(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
        value: u32,
    );
}
extern "C" {
    pub fn ARGBShadeRow_LASX(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
        value: u32,
    );
}
extern "C" {
    pub fn CumulativeSumToAverageRow_SSE2(
        topleft: *const i32,
        botleft: *const i32,
        width: ::std::os::raw::c_int,
        area: ::std::os::raw::c_int,
        dst: *mut u8,
        count: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ComputeCumulativeSumRow_SSE2(
        row: *const u8,
        cumsum: *mut i32,
        previous_cumsum: *const i32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CumulativeSumToAverageRow_C(
        tl: *const i32,
        bl: *const i32,
        w: ::std::os::raw::c_int,
        area: ::std::os::raw::c_int,
        dst: *mut u8,
        count: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ComputeCumulativeSumRow_C(
        row: *const u8,
        cumsum: *mut i32,
        previous_cumsum: *const i32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_C(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        src_stride: isize,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_SSSE3(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        src_stride: isize,
        dst_width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_AVX2(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        src_stride: isize,
        dst_width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_NEON(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        src_stride: isize,
        dst_width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_MSA(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        src_stride: isize,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_LSX(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        src_stride: isize,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_RVV(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        src_stride: isize,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_Any_NEON(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        src_stride_ptr: isize,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_Any_SSSE3(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        src_stride_ptr: isize,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_Any_AVX2(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        src_stride_ptr: isize,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_Any_MSA(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        src_stride_ptr: isize,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_Any_LSX(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        src_stride_ptr: isize,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_16_C(
        dst_ptr: *mut u16,
        src_ptr: *const u16,
        src_stride: isize,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_16_NEON(
        dst_ptr: *mut u16,
        src_ptr: *const u16,
        src_stride: isize,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_16_Any_NEON(
        dst_ptr: *mut u16,
        src_ptr: *const u16,
        src_stride: isize,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_16To8_C(
        dst_ptr: *mut u8,
        src_ptr: *const u16,
        src_stride: isize,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_16To8_NEON(
        dst_ptr: *mut u8,
        src_ptr: *const u16,
        src_stride: isize,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_16To8_Any_NEON(
        dst_ptr: *mut u8,
        src_ptr: *const u16,
        src_stride: isize,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_16To8_AVX2(
        dst_ptr: *mut u8,
        src_ptr: *const u16,
        src_stride: isize,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn InterpolateRow_16To8_Any_AVX2(
        dst_ptr: *mut u8,
        src_ptr: *const u16,
        src_stride: isize,
        scale: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        source_y_fraction: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelXRow_C(
        src_y0: *const u8,
        src_y1: *const u8,
        src_y2: *const u8,
        dst_sobelx: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelXRow_SSE2(
        src_y0: *const u8,
        src_y1: *const u8,
        src_y2: *const u8,
        dst_sobelx: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelXRow_NEON(
        src_y0: *const u8,
        src_y1: *const u8,
        src_y2: *const u8,
        dst_sobelx: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelXRow_MSA(
        src_y0: *const u8,
        src_y1: *const u8,
        src_y2: *const u8,
        dst_sobelx: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelYRow_C(
        src_y0: *const u8,
        src_y1: *const u8,
        dst_sobely: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelYRow_SSE2(
        src_y0: *const u8,
        src_y1: *const u8,
        dst_sobely: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelYRow_NEON(
        src_y0: *const u8,
        src_y1: *const u8,
        dst_sobely: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelYRow_MSA(
        src_y0: *const u8,
        src_y1: *const u8,
        dst_sobely: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelRow_C(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelRow_SSE2(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelRow_NEON(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelRow_MSA(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelRow_LSX(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelToPlaneRow_C(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_y: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelToPlaneRow_SSE2(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_y: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelToPlaneRow_NEON(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_y: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelToPlaneRow_MSA(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_y: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelToPlaneRow_LSX(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_y: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelXYRow_C(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelXYRow_SSE2(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelXYRow_NEON(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelXYRow_MSA(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelXYRow_LSX(
        src_sobelx: *const u8,
        src_sobely: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelRow_Any_SSE2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelRow_Any_NEON(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelRow_Any_MSA(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelRow_Any_LSX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelToPlaneRow_Any_SSE2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelToPlaneRow_Any_NEON(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelToPlaneRow_Any_MSA(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelToPlaneRow_Any_LSX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelXYRow_Any_SSE2(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelXYRow_Any_NEON(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelXYRow_Any_MSA(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SobelXYRow_Any_LSX(
        y_buf: *const u8,
        uv_buf: *const u8,
        dst_ptr: *mut u8,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBPolynomialRow_C(
        src_argb: *const u8,
        dst_argb: *mut u8,
        poly: *const f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBPolynomialRow_SSE2(
        src_argb: *const u8,
        dst_argb: *mut u8,
        poly: *const f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ARGBPolynomialRow_AVX2(
        src_argb: *const u8,
        dst_argb: *mut u8,
        poly: *const f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloatRow_C(src: *const u16, dst: *mut u16, scale: f32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn HalfFloatRow_SSE2(
        src: *const u16,
        dst: *mut u16,
        scale: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloatRow_Any_SSE2(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        param: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloatRow_AVX2(
        src: *const u16,
        dst: *mut u16,
        scale: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloatRow_Any_AVX2(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        param: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloatRow_F16C(
        src: *const u16,
        dst: *mut u16,
        scale: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloatRow_Any_F16C(
        src: *const u16,
        dst: *mut u16,
        scale: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloat1Row_F16C(
        src: *const u16,
        dst: *mut u16,
        scale: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloat1Row_Any_F16C(
        src: *const u16,
        dst: *mut u16,
        scale: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloatRow_NEON(
        src: *const u16,
        dst: *mut u16,
        scale: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloatRow_Any_NEON(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        param: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloat1Row_NEON(
        src: *const u16,
        dst: *mut u16,
        scale: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloat1Row_Any_NEON(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        param: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloatRow_MSA(
        src: *const u16,
        dst: *mut u16,
        scale: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloatRow_Any_MSA(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        param: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloatRow_LSX(
        src: *const u16,
        dst: *mut u16,
        scale: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HalfFloatRow_Any_LSX(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        param: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ByteToFloatRow_C(
        src: *const u8,
        dst: *mut f32,
        scale: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ByteToFloatRow_NEON(
        src: *const u8,
        dst: *mut f32,
        scale: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ByteToFloatRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut f32,
        param: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ConvertFP16ToFP32Row_NEON(src: *const u16, dst: *mut f32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ConvertFP16ToFP32Column_NEON(
        src: *const u16,
        src_stride: ::std::os::raw::c_int,
        dst: *mut f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ConvertFP32ToFP16Row_NEON(src: *const f32, dst: *mut u16, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBLumaColorTableRow_C(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
        luma: *const u8,
        lumacoeff: u32,
    );
}
extern "C" {
    pub fn ARGBLumaColorTableRow_SSSE3(
        src_argb: *const u8,
        dst_argb: *mut u8,
        width: ::std::os::raw::c_int,
        luma: *const u8,
        lumacoeff: u32,
    );
}
extern "C" {
    pub fn ScaleMaxSamples_C(
        src: *const f32,
        dst: *mut f32,
        scale: f32,
        width: ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn ScaleMaxSamples_NEON(
        src: *const f32,
        dst: *mut f32,
        scale: f32,
        width: ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn ScaleSumSamples_C(
        src: *const f32,
        dst: *mut f32,
        scale: f32,
        width: ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn ScaleSumSamples_NEON(
        src: *const f32,
        dst: *mut f32,
        scale: f32,
        width: ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn ScaleSamples_C(src: *const f32, dst: *mut f32, scale: f32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ScaleSamples_NEON(
        src: *const f32,
        dst: *mut f32,
        scale: f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn GaussRow_F32_NEON(src: *const f32, dst: *mut f32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn GaussRow_F32_C(src: *const f32, dst: *mut f32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn GaussCol_F32_NEON(
        src0: *const f32,
        src1: *const f32,
        src2: *const f32,
        src3: *const f32,
        src4: *const f32,
        dst: *mut f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn GaussCol_F32_C(
        src0: *const f32,
        src1: *const f32,
        src2: *const f32,
        src3: *const f32,
        src4: *const f32,
        dst: *mut f32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn GaussRow_C(src: *const u32, dst: *mut u16, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn GaussCol_C(
        src0: *const u16,
        src1: *const u16,
        src2: *const u16,
        src3: *const u16,
        src4: *const u16,
        dst: *mut u32,
        width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ClampFloatToZero_SSE2(src_x: *const f32, dst_y: *mut f32, width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ARGBScale(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ARGBScaleClip(
        src_argb: *const u8,
        src_stride_argb: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        clip_x: ::std::os::raw::c_int,
        clip_y: ::std::os::raw::c_int,
        clip_width: ::std::os::raw::c_int,
        clip_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn YUVToARGBScaleClip(
        src_y: *const u8,
        src_stride_y: ::std::os::raw::c_int,
        src_u: *const u8,
        src_stride_u: ::std::os::raw::c_int,
        src_v: *const u8,
        src_stride_v: ::std::os::raw::c_int,
        src_fourcc: u32,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_stride_argb: ::std::os::raw::c_int,
        dst_fourcc: u32,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        clip_x: ::std::os::raw::c_int,
        clip_y: ::std::os::raw::c_int,
        clip_width: ::std::os::raw::c_int,
        clip_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ScalePlaneVertical(
        src_height: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        src_stride: ::std::os::raw::c_int,
        dst_stride: ::std::os::raw::c_int,
        src_argb: *const u8,
        dst_argb: *mut u8,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        dy: ::std::os::raw::c_int,
        bpp: ::std::os::raw::c_int,
        filtering: FilterMode,
    );
}
extern "C" {
    pub fn ScalePlaneVertical_16(
        src_height: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        src_stride: ::std::os::raw::c_int,
        dst_stride: ::std::os::raw::c_int,
        src_argb: *const u16,
        dst_argb: *mut u16,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        dy: ::std::os::raw::c_int,
        wpp: ::std::os::raw::c_int,
        filtering: FilterMode,
    );
}
extern "C" {
    pub fn ScalePlaneVertical_16To8(
        src_height: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        src_stride: ::std::os::raw::c_int,
        dst_stride: ::std::os::raw::c_int,
        src_argb: *const u16,
        dst_argb: *mut u8,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        dy: ::std::os::raw::c_int,
        wpp: ::std::os::raw::c_int,
        scale: ::std::os::raw::c_int,
        filtering: FilterMode,
    );
}
extern "C" {
    pub fn ScalePlaneDown2_16To8(
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        src_stride: ::std::os::raw::c_int,
        dst_stride: ::std::os::raw::c_int,
        src_ptr: *const u16,
        dst_ptr: *mut u8,
        scale: ::std::os::raw::c_int,
        filtering: FilterMode,
    );
}
extern "C" {
    pub fn ScaleFilterReduce(
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> FilterMode;
}
extern "C" {
    pub fn FixedDiv_C(
        num: ::std::os::raw::c_int,
        div: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn FixedDiv_X86(
        num: ::std::os::raw::c_int,
        div: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn FixedDiv_MIPS(
        num: ::std::os::raw::c_int,
        div: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn FixedDiv1_C(
        num: ::std::os::raw::c_int,
        div: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn FixedDiv1_X86(
        num: ::std::os::raw::c_int,
        div: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn FixedDiv1_MIPS(
        num: ::std::os::raw::c_int,
        div: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ScaleSlope(
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        dx: *mut ::std::os::raw::c_int,
        dy: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_16_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_16To8_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
        scale: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_16To8_Odd_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
        scale: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_16_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_16To8_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
        scale: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_16To8_Odd_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
        scale: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_Odd_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_16_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_16To8_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
        scale: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_16To8_Odd_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
        scale: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4_16_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4Box_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4Box_16_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_16_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_0_Box_C(
        src_ptr: *const u8,
        src_stride: isize,
        d: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_0_Box_16_C(
        src_ptr: *const u16,
        src_stride: isize,
        d: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_1_Box_C(
        src_ptr: *const u8,
        src_stride: isize,
        d: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_1_Box_16_C(
        src_ptr: *const u16,
        src_stride: isize,
        d: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_C(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_16_C(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_16_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_Any_C(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_Any_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_16_Any_C(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_16_Any_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleCols_C(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleCols_16_C(
        dst_ptr: *mut u16,
        src_ptr: *const u16,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleColsUp2_C(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleColsUp2_16_C(
        dst_ptr: *mut u16,
        src_ptr: *const u16,
        dst_width: ::std::os::raw::c_int,
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleFilterCols_C(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleFilterCols_16_C(
        dst_ptr: *mut u16,
        src_ptr: *const u16,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleFilterCols64_C(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x32: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleFilterCols64_16_C(
        dst_ptr: *mut u16,
        src_ptr: *const u16,
        dst_width: ::std::os::raw::c_int,
        x32: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_16_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_3_Box_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_3_Box_16_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_2_Box_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_2_Box_16_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleAddRow_C(src_ptr: *const u8, dst_ptr: *mut u16, src_width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ScaleAddRow_16_C(
        src_ptr: *const u16,
        dst_ptr: *mut u32,
        src_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2_C(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Linear_C(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Box_C(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEven_C(
        src_argb: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEvenBox_C(
        src_argb: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBCols_C(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBCols64_C(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        x32: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBColsUp2_C(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBFilterCols_C(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBFilterCols64_C(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        x32: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2_C(
        src_uv: *const u8,
        src_stride: isize,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Linear_C(
        src_uv: *const u8,
        src_stride: isize,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Box_C(
        src_uv: *const u8,
        src_stride: isize,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEven_C(
        src_uv: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEvenBox_C(
        src_uv: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_C(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_Any_C(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_Any_C(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_16_C(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_16_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_16_Any_C(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_16_Any_C(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVCols_C(
        dst_uv: *mut u8,
        src_uv: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVCols64_C(
        dst_uv: *mut u8,
        src_uv: *const u8,
        dst_width: ::std::os::raw::c_int,
        x32: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVColsUp2_C(
        dst_uv: *mut u8,
        src_uv: *const u8,
        dst_width: ::std::os::raw::c_int,
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVFilterCols_C(
        dst_uv: *mut u8,
        src_uv: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVFilterCols64_C(
        dst_uv: *mut u8,
        src_uv: *const u8,
        dst_width: ::std::os::raw::c_int,
        x32: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4Box_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4Box_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_1_Box_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_0_Box_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_3_Box_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_2_Box_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_SSE2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_12_SSSE3(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_12_SSSE3(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_16_SSE2(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_16_SSE2(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_12_AVX2(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_12_AVX2(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_16_AVX2(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_16_AVX2(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_Any_SSE2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_12_Any_SSSE3(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_12_Any_SSSE3(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_16_Any_SSE2(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_16_Any_SSE2(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_Any_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_12_Any_AVX2(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_12_Any_AVX2(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_16_Any_AVX2(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_16_Any_AVX2(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_Odd_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_Any_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_Any_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_Any_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_Odd_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4Box_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4_Any_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4Box_Any_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_1_Box_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_0_Box_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_3_Box_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_2_Box_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleAddRow_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        src_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleAddRow_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        src_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleAddRow_Any_SSE2(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        src_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleAddRow_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        src_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleFilterCols_SSSE3(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleColsUp2_SSE2(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBCols_SSE2(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBFilterCols_SSSE3(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBColsUp2_SSE2(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBFilterCols_NEON(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBCols_NEON(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBFilterCols_Any_NEON(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBCols_Any_NEON(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBFilterCols_MSA(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBCols_MSA(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBFilterCols_Any_MSA(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBCols_Any_MSA(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2_SSE2(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Linear_SSE2(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Box_SSE2(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Linear_NEON(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Box_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2_RVV(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Linear_RVV(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Box_RVV(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2_MSA(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Linear_MSA(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Box_MSA(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2_LSX(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Linear_LSX(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Box_LSX(
        src_argb: *const u8,
        src_stride: isize,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2_Any_SSE2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Linear_Any_SSE2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Box_Any_SSE2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Linear_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Box_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Linear_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Box_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Linear_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDown2Box_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEven_SSE2(
        src_argb: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEvenBox_SSE2(
        src_argb: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEven_NEON(
        src_argb: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEvenBox_NEON(
        src_argb: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEven_MSA(
        src_argb: *const u8,
        src_stride: isize,
        src_stepx: i32,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEvenBox_MSA(
        src_argb: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEven_LSX(
        src_argb: *const u8,
        src_stride: isize,
        src_stepx: i32,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEvenBox_LSX(
        src_argb: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEven_RVV(
        src_argb: *const u8,
        src_stride: isize,
        src_stepx: i32,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEvenBox_RVV(
        src_argb: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_argb: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEven_Any_SSE2(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEvenBox_Any_SSE2(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEven_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEvenBox_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEven_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: i32,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEvenBox_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEven_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: i32,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBRowDownEvenBox_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Linear_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Box_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Box_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Linear_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Box_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Linear_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Box_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Linear_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Box_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Linear_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Box_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Box_Any_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Linear_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Box_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Linear_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown2Box_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEven_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEvenBox_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEven_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEvenBox_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDown4_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: i32,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEven_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: i32,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEven_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: i32,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEvenBox_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEven_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEvenBox_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEven_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEvenBox_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEven_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: i32,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowDownEvenBox_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        src_stepx: ::std::os::raw::c_int,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_Any_SSSE3(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_Any_SSSE3(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_Any_AVX2(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_Any_AVX2(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_RVV(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_16_SSE41(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_16_SSE41(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_16_Any_SSE41(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_16_Any_SSE41(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_16_AVX2(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_16_AVX2(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_16_Any_AVX2(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_16_Any_AVX2(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_16_NEON(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_16_NEON(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Linear_16_Any_NEON(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleUVRowUp2_Bilinear_16_Any_NEON(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4Box_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_0_Box_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_1_Box_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_3_Box_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_2_Box_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_Odd_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4Box_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_0_Box_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_1_Box_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_3_Box_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_2_Box_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_12_NEON(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_12_NEON(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_16_NEON(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_16_NEON(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_Any_NEON(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_12_Any_NEON(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_12_Any_NEON(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_16_Any_NEON(
        src_ptr: *const u16,
        dst_ptr: *mut u16,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_16_Any_NEON(
        src_ptr: *const u16,
        src_stride: isize,
        dst_ptr: *mut u16,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleAddRow_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        src_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleAddRow_Any_NEON(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        src_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleFilterCols_NEON(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleFilterCols_Any_NEON(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4Box_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_2_Box_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_3_Box_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleAddRow_MSA(src_ptr: *const u8, dst_ptr: *mut u16, src_width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ScaleFilterCols_MSA(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_0_Box_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        d: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_1_Box_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        d: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4Box_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_2_Box_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_3_Box_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleAddRow_Any_MSA(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        src_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleFilterCols_Any_MSA(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_0_Box_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_1_Box_Any_MSA(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4Box_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_2_Box_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_3_Box_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleAddRow_LSX(src_ptr: *const u8, dst_ptr: *mut u16, src_width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ScaleFilterCols_LSX(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBFilterCols_LSX(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBCols_LSX(
        dst_argb: *mut u8,
        src_argb: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_0_Box_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        d: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_1_Box_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        d: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4Box_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_2_Box_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_3_Box_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleAddRow_Any_LSX(
        src_ptr: *const u8,
        dst_ptr: *mut u16,
        src_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleFilterCols_Any_LSX(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBCols_Any_LSX(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleARGBFilterCols_Any_LSX(
        dst_ptr: *mut u8,
        src_ptr: *const u8,
        dst_width: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_0_Box_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_1_Box_Any_LSX(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleAddRow_RVV(src_ptr: *const u8, dst_ptr: *mut u16, src_width: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ScaleRowDown2_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Linear_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown2Box_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown4Box_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_0_Box_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown34_1_Box_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_3_Box_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowDown38_2_Box_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Linear_RVV(
        src_ptr: *const u8,
        dst_ptr: *mut u8,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ScaleRowUp2_Bilinear_RVV(
        src_ptr: *const u8,
        src_stride: isize,
        dst_ptr: *mut u8,
        dst_stride: isize,
        dst_width: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UVScale(
        src_uv: *const u8,
        src_stride_uv: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_uv: *mut u8,
        dst_stride_uv: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn UVScale_16(
        src_uv: *const u16,
        src_stride_uv: ::std::os::raw::c_int,
        src_width: ::std::os::raw::c_int,
        src_height: ::std::os::raw::c_int,
        dst_uv: *mut u16,
        dst_stride_uv: ::std::os::raw::c_int,
        dst_width: ::std::os::raw::c_int,
        dst_height: ::std::os::raw::c_int,
        filtering: FilterMode,
    ) -> ::std::os::raw::c_int;
}
pub const FourCC_FOURCC_I420: FourCC = 808596553;
pub const FourCC_FOURCC_I422: FourCC = 842150985;
pub const FourCC_FOURCC_I444: FourCC = 875836489;
pub const FourCC_FOURCC_I400: FourCC = 808465481;
pub const FourCC_FOURCC_NV21: FourCC = 825382478;
pub const FourCC_FOURCC_NV12: FourCC = 842094158;
pub const FourCC_FOURCC_YUY2: FourCC = 844715353;
pub const FourCC_FOURCC_UYVY: FourCC = 1498831189;
pub const FourCC_FOURCC_I010: FourCC = 808529993;
pub const FourCC_FOURCC_I210: FourCC = 808530505;
pub const FourCC_FOURCC_M420: FourCC = 808596557;
pub const FourCC_FOURCC_ARGB: FourCC = 1111970369;
pub const FourCC_FOURCC_BGRA: FourCC = 1095911234;
pub const FourCC_FOURCC_ABGR: FourCC = 1380401729;
pub const FourCC_FOURCC_AR30: FourCC = 808669761;
pub const FourCC_FOURCC_AB30: FourCC = 808665665;
pub const FourCC_FOURCC_AR64: FourCC = 875975233;
pub const FourCC_FOURCC_AB64: FourCC = 875971137;
pub const FourCC_FOURCC_24BG: FourCC = 1195521074;
pub const FourCC_FOURCC_RAW: FourCC = 544694642;
pub const FourCC_FOURCC_RGBA: FourCC = 1094862674;
pub const FourCC_FOURCC_RGBP: FourCC = 1346520914;
pub const FourCC_FOURCC_RGBO: FourCC = 1329743698;
pub const FourCC_FOURCC_R444: FourCC = 875836498;
pub const FourCC_FOURCC_MJPG: FourCC = 1196444237;
pub const FourCC_FOURCC_YV12: FourCC = 842094169;
pub const FourCC_FOURCC_YV16: FourCC = 909203033;
pub const FourCC_FOURCC_YV24: FourCC = 875714137;
pub const FourCC_FOURCC_YU12: FourCC = 842093913;
pub const FourCC_FOURCC_J420: FourCC = 808596554;
pub const FourCC_FOURCC_J422: FourCC = 842150986;
pub const FourCC_FOURCC_J444: FourCC = 875836490;
pub const FourCC_FOURCC_J400: FourCC = 808465482;
pub const FourCC_FOURCC_F420: FourCC = 808596550;
pub const FourCC_FOURCC_F422: FourCC = 842150982;
pub const FourCC_FOURCC_F444: FourCC = 875836486;
pub const FourCC_FOURCC_H420: FourCC = 808596552;
pub const FourCC_FOURCC_H422: FourCC = 842150984;
pub const FourCC_FOURCC_H444: FourCC = 875836488;
pub const FourCC_FOURCC_U420: FourCC = 808596565;
pub const FourCC_FOURCC_U422: FourCC = 842150997;
pub const FourCC_FOURCC_U444: FourCC = 875836501;
pub const FourCC_FOURCC_F010: FourCC = 808529990;
pub const FourCC_FOURCC_H010: FourCC = 808529992;
pub const FourCC_FOURCC_U010: FourCC = 808530005;
pub const FourCC_FOURCC_F210: FourCC = 808530502;
pub const FourCC_FOURCC_H210: FourCC = 808530504;
pub const FourCC_FOURCC_U210: FourCC = 808530517;
pub const FourCC_FOURCC_P010: FourCC = 808530000;
pub const FourCC_FOURCC_P210: FourCC = 808530512;
pub const FourCC_FOURCC_IYUV: FourCC = 1448433993;
pub const FourCC_FOURCC_YU16: FourCC = 909202777;
pub const FourCC_FOURCC_YU24: FourCC = 875713881;
pub const FourCC_FOURCC_YUYV: FourCC = 1448695129;
pub const FourCC_FOURCC_YUVS: FourCC = 1937143161;
pub const FourCC_FOURCC_HDYC: FourCC = 1129923656;
pub const FourCC_FOURCC_2VUY: FourCC = 2037741106;
pub const FourCC_FOURCC_JPEG: FourCC = 1195724874;
pub const FourCC_FOURCC_DMB1: FourCC = 828534116;
pub const FourCC_FOURCC_BA81: FourCC = 825770306;
pub const FourCC_FOURCC_RGB3: FourCC = 859981650;
pub const FourCC_FOURCC_BGR3: FourCC = 861030210;
pub const FourCC_FOURCC_CM32: FourCC = 536870912;
pub const FourCC_FOURCC_CM24: FourCC = 402653184;
pub const FourCC_FOURCC_L555: FourCC = 892679500;
pub const FourCC_FOURCC_L565: FourCC = 892745036;
pub const FourCC_FOURCC_5551: FourCC = 825570613;
pub const FourCC_FOURCC_I411: FourCC = 825308233;
pub const FourCC_FOURCC_Q420: FourCC = 808596561;
pub const FourCC_FOURCC_RGGB: FourCC = 1111967570;
pub const FourCC_FOURCC_BGGR: FourCC = 1380403010;
pub const FourCC_FOURCC_GRBG: FourCC = 1195528775;
pub const FourCC_FOURCC_GBRG: FourCC = 1196573255;
pub const FourCC_FOURCC_H264: FourCC = 875967048;
pub const FourCC_FOURCC_ANY: FourCC = -1;
pub type FourCC = ::std::os::raw::c_int;
pub const FourCCBpp_FOURCC_BPP_I420: FourCCBpp = 12;
pub const FourCCBpp_FOURCC_BPP_I422: FourCCBpp = 16;
pub const FourCCBpp_FOURCC_BPP_I444: FourCCBpp = 24;
pub const FourCCBpp_FOURCC_BPP_I411: FourCCBpp = 12;
pub const FourCCBpp_FOURCC_BPP_I400: FourCCBpp = 8;
pub const FourCCBpp_FOURCC_BPP_NV21: FourCCBpp = 12;
pub const FourCCBpp_FOURCC_BPP_NV12: FourCCBpp = 12;
pub const FourCCBpp_FOURCC_BPP_YUY2: FourCCBpp = 16;
pub const FourCCBpp_FOURCC_BPP_UYVY: FourCCBpp = 16;
pub const FourCCBpp_FOURCC_BPP_M420: FourCCBpp = 12;
pub const FourCCBpp_FOURCC_BPP_Q420: FourCCBpp = 12;
pub const FourCCBpp_FOURCC_BPP_ARGB: FourCCBpp = 32;
pub const FourCCBpp_FOURCC_BPP_BGRA: FourCCBpp = 32;
pub const FourCCBpp_FOURCC_BPP_ABGR: FourCCBpp = 32;
pub const FourCCBpp_FOURCC_BPP_RGBA: FourCCBpp = 32;
pub const FourCCBpp_FOURCC_BPP_AR30: FourCCBpp = 32;
pub const FourCCBpp_FOURCC_BPP_AB30: FourCCBpp = 32;
pub const FourCCBpp_FOURCC_BPP_AR64: FourCCBpp = 64;
pub const FourCCBpp_FOURCC_BPP_AB64: FourCCBpp = 64;
pub const FourCCBpp_FOURCC_BPP_24BG: FourCCBpp = 24;
pub const FourCCBpp_FOURCC_BPP_RAW: FourCCBpp = 24;
pub const FourCCBpp_FOURCC_BPP_RGBP: FourCCBpp = 16;
pub const FourCCBpp_FOURCC_BPP_RGBO: FourCCBpp = 16;
pub const FourCCBpp_FOURCC_BPP_R444: FourCCBpp = 16;
pub const FourCCBpp_FOURCC_BPP_RGGB: FourCCBpp = 8;
pub const FourCCBpp_FOURCC_BPP_BGGR: FourCCBpp = 8;
pub const FourCCBpp_FOURCC_BPP_GRBG: FourCCBpp = 8;
pub const FourCCBpp_FOURCC_BPP_GBRG: FourCCBpp = 8;
pub const FourCCBpp_FOURCC_BPP_YV12: FourCCBpp = 12;
pub const FourCCBpp_FOURCC_BPP_YV16: FourCCBpp = 16;
pub const FourCCBpp_FOURCC_BPP_YV24: FourCCBpp = 24;
pub const FourCCBpp_FOURCC_BPP_YU12: FourCCBpp = 12;
pub const FourCCBpp_FOURCC_BPP_J420: FourCCBpp = 12;
pub const FourCCBpp_FOURCC_BPP_J400: FourCCBpp = 8;
pub const FourCCBpp_FOURCC_BPP_H420: FourCCBpp = 12;
pub const FourCCBpp_FOURCC_BPP_H422: FourCCBpp = 16;
pub const FourCCBpp_FOURCC_BPP_I010: FourCCBpp = 15;
pub const FourCCBpp_FOURCC_BPP_I210: FourCCBpp = 20;
pub const FourCCBpp_FOURCC_BPP_H010: FourCCBpp = 15;
pub const FourCCBpp_FOURCC_BPP_H210: FourCCBpp = 20;
pub const FourCCBpp_FOURCC_BPP_P010: FourCCBpp = 15;
pub const FourCCBpp_FOURCC_BPP_P210: FourCCBpp = 20;
pub const FourCCBpp_FOURCC_BPP_MJPG: FourCCBpp = 0;
pub const FourCCBpp_FOURCC_BPP_H264: FourCCBpp = 0;
pub const FourCCBpp_FOURCC_BPP_IYUV: FourCCBpp = 12;
pub const FourCCBpp_FOURCC_BPP_YU16: FourCCBpp = 16;
pub const FourCCBpp_FOURCC_BPP_YU24: FourCCBpp = 24;
pub const FourCCBpp_FOURCC_BPP_YUYV: FourCCBpp = 16;
pub const FourCCBpp_FOURCC_BPP_YUVS: FourCCBpp = 16;
pub const FourCCBpp_FOURCC_BPP_HDYC: FourCCBpp = 16;
pub const FourCCBpp_FOURCC_BPP_2VUY: FourCCBpp = 16;
pub const FourCCBpp_FOURCC_BPP_JPEG: FourCCBpp = 1;
pub const FourCCBpp_FOURCC_BPP_DMB1: FourCCBpp = 1;
pub const FourCCBpp_FOURCC_BPP_BA81: FourCCBpp = 8;
pub const FourCCBpp_FOURCC_BPP_RGB3: FourCCBpp = 24;
pub const FourCCBpp_FOURCC_BPP_BGR3: FourCCBpp = 24;
pub const FourCCBpp_FOURCC_BPP_CM32: FourCCBpp = 32;
pub const FourCCBpp_FOURCC_BPP_CM24: FourCCBpp = 24;
pub const FourCCBpp_FOURCC_BPP_ANY: FourCCBpp = 0;
pub type FourCCBpp = ::std::os::raw::c_uint;
extern "C" {
    pub fn CanonicalFourCC(fourcc: u32) -> u32;
}

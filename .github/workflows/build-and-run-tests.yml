name: Build and Run Tests
on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

# Cancel the workflow if a new one is triggered from the same PR, branch, or tag, except on main.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build-and-run-tests:
    name: "Build and Run Tests on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      CC: clang
      CXX: clang++

    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - uses: ./.github/actions/setup-deps

    - name: Build and run the Rust tests
      run: cargo test -- --skip test_conformance

    - name: Build and run the C++ tests
      # TODO: This step fails on macos. So run it on linux only for now.
      if: runner.os == 'Linux'
      run: |
        cargo build --features capi,aom --release
        cmake -S c_api_tests -B c_build
        make -C c_build
        ctest --test-dir c_build -E conformance_tests

    - name: Build and run the Rust tests with libgav1
      run: cargo test --no-default-features --features libgav1,libyuv -- --skip test_conformance

    - name: Build and run the C++ tests with libgav1
      # TODO: This step fails on macos. So run it on linux only for now.
      if: runner.os == 'Linux'
      run: |
        cargo build --no-default-features --features capi,libgav1,libyuv,aom --release
        cmake -S c_api_tests -B c_build_gav1
        make -C c_build_gav1
        ctest --test-dir c_build_gav1 -E conformance_tests

    - name: Build and run the heic tests with heic feature enabled
      run: cargo test --features heic heic

    - name: Build and run all the tests with aom feature enabled
      # TODO: Enable this for windows.
      if: runner.os != 'Windows'
      run: cargo test --features aom -- --skip test_conformance
